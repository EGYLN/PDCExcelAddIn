//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace OpenLib.CompoundInformationService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CompoundInformationServiceSoap", Namespace="http://pdc/webservices/")]
    public partial class CompoundInformationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCompoundInformationTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompoundInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompoundInformationBitmapOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompoundInformationMolfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompoundInformationMolweightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompoundInformationFormulaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompoundInformationAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCompoundInformationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CompoundInformationService() {
            this.Url = global::OpenLib.Properties.Settings.Default.OpenLib_CompoundInformationService_CompoundInformationService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCompoundInformationTestCompletedEventHandler GetCompoundInformationTestCompleted;
        
        /// <remarks/>
        public event GetCompoundInformationCompletedEventHandler GetCompoundInformationCompleted;
        
        /// <remarks/>
        public event GetCompoundInformationBitmapCompletedEventHandler GetCompoundInformationBitmapCompleted;
        
        /// <remarks/>
        public event GetCompoundInformationMolfileCompletedEventHandler GetCompoundInformationMolfileCompleted;
        
        /// <remarks/>
        public event GetCompoundInformationMolweightCompletedEventHandler GetCompoundInformationMolweightCompleted;
        
        /// <remarks/>
        public event GetCompoundInformationFormulaCompletedEventHandler GetCompoundInformationFormulaCompleted;
        
        /// <remarks/>
        public event GetCompoundInformationAllCompletedEventHandler GetCompoundInformationAllCompleted;
        
        /// <remarks/>
        public event CheckCompoundInformationCompletedEventHandler CheckCompoundInformationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pdc/webservices/GetCompoundInformationTest", RequestNamespace="http://pdc/webservices/", ResponseNamespace="http://pdc/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCompoundInformationTest() {
            object[] results = this.Invoke("GetCompoundInformationTest", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompoundInformationTestAsync() {
            this.GetCompoundInformationTestAsync(null);
        }
        
        /// <remarks/>
        public void GetCompoundInformationTestAsync(object userState) {
            if ((this.GetCompoundInformationTestOperationCompleted == null)) {
                this.GetCompoundInformationTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompoundInformationTestOperationCompleted);
            }
            this.InvokeAsync("GetCompoundInformationTest", new object[0], this.GetCompoundInformationTestOperationCompleted, userState);
        }
        
        private void OnGetCompoundInformationTestOperationCompleted(object arg) {
            if ((this.GetCompoundInformationTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompoundInformationTestCompleted(this, new GetCompoundInformationTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pdc/webservices/GetCompoundInformation", RequestNamespace="http://pdc/webservices/", ResponseNamespace="http://pdc/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ParameterMap[] GetCompoundInformation(CompoundInformation ci, string[] parameters) {
            object[] results = this.Invoke("GetCompoundInformation", new object[] {
                        ci,
                        parameters});
            return ((ParameterMap[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCompoundInformationAsync(CompoundInformation ci, string[] parameters) {
            this.GetCompoundInformationAsync(ci, parameters, null);
        }
        
        /// <remarks/>
        public void GetCompoundInformationAsync(CompoundInformation ci, string[] parameters, object userState) {
            if ((this.GetCompoundInformationOperationCompleted == null)) {
                this.GetCompoundInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompoundInformationOperationCompleted);
            }
            this.InvokeAsync("GetCompoundInformation", new object[] {
                        ci,
                        parameters}, this.GetCompoundInformationOperationCompleted, userState);
        }
        
        private void OnGetCompoundInformationOperationCompleted(object arg) {
            if ((this.GetCompoundInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompoundInformationCompleted(this, new GetCompoundInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pdc/webservices/GetCompoundInformationBitmap", RequestNamespace="http://pdc/webservices/", ResponseNamespace="http://pdc/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetCompoundInformationBitmap(CompoundInformation ci, string profile) {
            object[] results = this.Invoke("GetCompoundInformationBitmap", new object[] {
                        ci,
                        profile});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCompoundInformationBitmapAsync(CompoundInformation ci, string profile) {
            this.GetCompoundInformationBitmapAsync(ci, profile, null);
        }
        
        /// <remarks/>
        public void GetCompoundInformationBitmapAsync(CompoundInformation ci, string profile, object userState) {
            if ((this.GetCompoundInformationBitmapOperationCompleted == null)) {
                this.GetCompoundInformationBitmapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompoundInformationBitmapOperationCompleted);
            }
            this.InvokeAsync("GetCompoundInformationBitmap", new object[] {
                        ci,
                        profile}, this.GetCompoundInformationBitmapOperationCompleted, userState);
        }
        
        private void OnGetCompoundInformationBitmapOperationCompleted(object arg) {
            if ((this.GetCompoundInformationBitmapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompoundInformationBitmapCompleted(this, new GetCompoundInformationBitmapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pdc/webservices/GetCompoundInformationMolfile", RequestNamespace="http://pdc/webservices/", ResponseNamespace="http://pdc/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCompoundInformationMolfile(CompoundInformation ci) {
            object[] results = this.Invoke("GetCompoundInformationMolfile", new object[] {
                        ci});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompoundInformationMolfileAsync(CompoundInformation ci) {
            this.GetCompoundInformationMolfileAsync(ci, null);
        }
        
        /// <remarks/>
        public void GetCompoundInformationMolfileAsync(CompoundInformation ci, object userState) {
            if ((this.GetCompoundInformationMolfileOperationCompleted == null)) {
                this.GetCompoundInformationMolfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompoundInformationMolfileOperationCompleted);
            }
            this.InvokeAsync("GetCompoundInformationMolfile", new object[] {
                        ci}, this.GetCompoundInformationMolfileOperationCompleted, userState);
        }
        
        private void OnGetCompoundInformationMolfileOperationCompleted(object arg) {
            if ((this.GetCompoundInformationMolfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompoundInformationMolfileCompleted(this, new GetCompoundInformationMolfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pdc/webservices/GetCompoundInformationMolweight", RequestNamespace="http://pdc/webservices/", ResponseNamespace="http://pdc/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetCompoundInformationMolweight(CompoundInformation ci) {
            object[] results = this.Invoke("GetCompoundInformationMolweight", new object[] {
                        ci});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompoundInformationMolweightAsync(CompoundInformation ci) {
            this.GetCompoundInformationMolweightAsync(ci, null);
        }
        
        /// <remarks/>
        public void GetCompoundInformationMolweightAsync(CompoundInformation ci, object userState) {
            if ((this.GetCompoundInformationMolweightOperationCompleted == null)) {
                this.GetCompoundInformationMolweightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompoundInformationMolweightOperationCompleted);
            }
            this.InvokeAsync("GetCompoundInformationMolweight", new object[] {
                        ci}, this.GetCompoundInformationMolweightOperationCompleted, userState);
        }
        
        private void OnGetCompoundInformationMolweightOperationCompleted(object arg) {
            if ((this.GetCompoundInformationMolweightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompoundInformationMolweightCompleted(this, new GetCompoundInformationMolweightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pdc/webservices/GetCompoundInformationFormula", RequestNamespace="http://pdc/webservices/", ResponseNamespace="http://pdc/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCompoundInformationFormula(CompoundInformation ci) {
            object[] results = this.Invoke("GetCompoundInformationFormula", new object[] {
                        ci});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompoundInformationFormulaAsync(CompoundInformation ci) {
            this.GetCompoundInformationFormulaAsync(ci, null);
        }
        
        /// <remarks/>
        public void GetCompoundInformationFormulaAsync(CompoundInformation ci, object userState) {
            if ((this.GetCompoundInformationFormulaOperationCompleted == null)) {
                this.GetCompoundInformationFormulaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompoundInformationFormulaOperationCompleted);
            }
            this.InvokeAsync("GetCompoundInformationFormula", new object[] {
                        ci}, this.GetCompoundInformationFormulaOperationCompleted, userState);
        }
        
        private void OnGetCompoundInformationFormulaOperationCompleted(object arg) {
            if ((this.GetCompoundInformationFormulaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompoundInformationFormulaCompleted(this, new GetCompoundInformationFormulaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pdc/webservices/GetCompoundInformationAll", RequestNamespace="http://pdc/webservices/", ResponseNamespace="http://pdc/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompoundInformation GetCompoundInformationAll(CompoundInformation ci, string ImageFormat, string Hydroges) {
            object[] results = this.Invoke("GetCompoundInformationAll", new object[] {
                        ci,
                        ImageFormat,
                        Hydroges});
            return ((CompoundInformation)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompoundInformationAllAsync(CompoundInformation ci, string ImageFormat, string Hydroges) {
            this.GetCompoundInformationAllAsync(ci, ImageFormat, Hydroges, null);
        }
        
        /// <remarks/>
        public void GetCompoundInformationAllAsync(CompoundInformation ci, string ImageFormat, string Hydroges, object userState) {
            if ((this.GetCompoundInformationAllOperationCompleted == null)) {
                this.GetCompoundInformationAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompoundInformationAllOperationCompleted);
            }
            this.InvokeAsync("GetCompoundInformationAll", new object[] {
                        ci,
                        ImageFormat,
                        Hydroges}, this.GetCompoundInformationAllOperationCompleted, userState);
        }
        
        private void OnGetCompoundInformationAllOperationCompleted(object arg) {
            if ((this.GetCompoundInformationAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompoundInformationAllCompleted(this, new GetCompoundInformationAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pdc/webservices/CheckCompoundInformation", RequestNamespace="http://pdc/webservices/", ResponseNamespace="http://pdc/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompoundInformation CheckCompoundInformation(CompoundInformation ci) {
            object[] results = this.Invoke("CheckCompoundInformation", new object[] {
                        ci});
            return ((CompoundInformation)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCompoundInformationAsync(CompoundInformation ci) {
            this.CheckCompoundInformationAsync(ci, null);
        }
        
        /// <remarks/>
        public void CheckCompoundInformationAsync(CompoundInformation ci, object userState) {
            if ((this.CheckCompoundInformationOperationCompleted == null)) {
                this.CheckCompoundInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCompoundInformationOperationCompleted);
            }
            this.InvokeAsync("CheckCompoundInformation", new object[] {
                        ci}, this.CheckCompoundInformationOperationCompleted, userState);
        }
        
        private void OnCheckCompoundInformationOperationCompleted(object arg) {
            if ((this.CheckCompoundInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCompoundInformationCompleted(this, new CheckCompoundInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://pdc/webservices/")]
    public partial class CompoundInformation {
        
        private string molfileField;
        
        private double molWeightField;
        
        private string molFormulaField;
        
        private string compoundNoField;
        
        private string preparationNoField;
        
        private byte[] molImageArrayField;
        
        private string tagField;
        
        private string errorinformationField;
        
        private string result_CompoundCheckField;
        
        private string result_PreparationCheckField;
        
        private string result_MCCheckField;
        
        private string mCNoField;
        
        /// <remarks/>
        public string Molfile {
            get {
                return this.molfileField;
            }
            set {
                this.molfileField = value;
            }
        }
        
        /// <remarks/>
        public double MolWeight {
            get {
                return this.molWeightField;
            }
            set {
                this.molWeightField = value;
            }
        }
        
        /// <remarks/>
        public string MolFormula {
            get {
                return this.molFormulaField;
            }
            set {
                this.molFormulaField = value;
            }
        }
        
        /// <remarks/>
        public string CompoundNo {
            get {
                return this.compoundNoField;
            }
            set {
                this.compoundNoField = value;
            }
        }
        
        /// <remarks/>
        public string PreparationNo {
            get {
                return this.preparationNoField;
            }
            set {
                this.preparationNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] MolImageArray {
            get {
                return this.molImageArrayField;
            }
            set {
                this.molImageArrayField = value;
            }
        }
        
        /// <remarks/>
        public string Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
        
        /// <remarks/>
        public string Errorinformation {
            get {
                return this.errorinformationField;
            }
            set {
                this.errorinformationField = value;
            }
        }
        
        /// <remarks/>
        public string Result_CompoundCheck {
            get {
                return this.result_CompoundCheckField;
            }
            set {
                this.result_CompoundCheckField = value;
            }
        }
        
        /// <remarks/>
        public string Result_PreparationCheck {
            get {
                return this.result_PreparationCheckField;
            }
            set {
                this.result_PreparationCheckField = value;
            }
        }
        
        /// <remarks/>
        public string Result_MCCheck {
            get {
                return this.result_MCCheckField;
            }
            set {
                this.result_MCCheckField = value;
            }
        }
        
        /// <remarks/>
        public string MCNo {
            get {
                return this.mCNoField;
            }
            set {
                this.mCNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://pdc/webservices/")]
    public partial class ParameterMap {
        
        private string paramnameField;
        
        private string paramvalueField;
        
        /// <remarks/>
        public string Paramname {
            get {
                return this.paramnameField;
            }
            set {
                this.paramnameField = value;
            }
        }
        
        /// <remarks/>
        public string Paramvalue {
            get {
                return this.paramvalueField;
            }
            set {
                this.paramvalueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetCompoundInformationTestCompletedEventHandler(object sender, GetCompoundInformationTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompoundInformationTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompoundInformationTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetCompoundInformationCompletedEventHandler(object sender, GetCompoundInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompoundInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompoundInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ParameterMap[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ParameterMap[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetCompoundInformationBitmapCompletedEventHandler(object sender, GetCompoundInformationBitmapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompoundInformationBitmapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompoundInformationBitmapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetCompoundInformationMolfileCompletedEventHandler(object sender, GetCompoundInformationMolfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompoundInformationMolfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompoundInformationMolfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetCompoundInformationMolweightCompletedEventHandler(object sender, GetCompoundInformationMolweightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompoundInformationMolweightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompoundInformationMolweightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetCompoundInformationFormulaCompletedEventHandler(object sender, GetCompoundInformationFormulaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompoundInformationFormulaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompoundInformationFormulaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetCompoundInformationAllCompletedEventHandler(object sender, GetCompoundInformationAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompoundInformationAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompoundInformationAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompoundInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompoundInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CheckCompoundInformationCompletedEventHandler(object sender, CheckCompoundInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCompoundInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCompoundInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompoundInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompoundInformation)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591