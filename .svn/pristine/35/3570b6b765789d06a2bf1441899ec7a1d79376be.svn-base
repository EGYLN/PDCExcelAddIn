//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BBS.ST.BHC.BSP.PDC.Lib.PDCWebservice {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PDCServiceSOAP11Binding", Namespace="http://service.pdc.ws.bayer.com/xsd")]
    public partial class PDCService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback findTestdefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkCompoundNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeErrorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback listPreparationNumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback createErrorOrMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback calculateDMSOAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback executeNamedOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback listProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveErrorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback findUploadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadSingleEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkUploadDataExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback returnWeightAndStructureOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PDCService() {
            this.Url = global::BBS.ST.BHC.BSP.PDC.Lib.Properties.Settings.Default.PDCLib_pdcWS_PDCService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event findTestdefinitionCompletedEventHandler findTestdefinitionCompleted;
        
        /// <remarks/>
        public event checkCompoundNameCompletedEventHandler checkCompoundNameCompleted;
        
        /// <remarks/>
        public event removeErrorsCompletedEventHandler removeErrorsCompleted;
        
        /// <remarks/>
        public event validateDataCompletedEventHandler validateDataCompleted;
        
        /// <remarks/>
        public event listPreparationNumbersCompletedEventHandler listPreparationNumbersCompleted;
        
        /// <remarks/>
        public event createErrorOrMessageCompletedEventHandler createErrorOrMessageCompleted;
        
        /// <remarks/>
        public event calculateDMSOAmountCompletedEventHandler calculateDMSOAmountCompleted;
        
        /// <remarks/>
        public event executeNamedOperationCompletedEventHandler executeNamedOperationCompleted;
        
        /// <remarks/>
        public event listProjectsCompletedEventHandler listProjectsCompleted;
        
        /// <remarks/>
        public event retrieveErrorsCompletedEventHandler retrieveErrorsCompleted;
        
        /// <remarks/>
        public event findUploadDataCompletedEventHandler findUploadDataCompleted;
        
        /// <remarks/>
        public event updateErrorCompletedEventHandler updateErrorCompleted;
        
        /// <remarks/>
        public event deleteUploadCompletedEventHandler deleteUploadCompleted;
        
        /// <remarks/>
        public event uploadSingleEntryCompletedEventHandler uploadSingleEntryCompleted;
        
        /// <remarks/>
        public event uploadTableCompletedEventHandler uploadTableCompleted;
        
        /// <remarks/>
        public event checkUploadDataExistsCompletedEventHandler checkUploadDataExistsCompleted;
        
        /// <remarks/>
        public event updateUploadCompletedEventHandler updateUploadCompleted;
        
        /// <remarks/>
        public event returnWeightAndStructureCompletedEventHandler returnWeightAndStructureCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:findTestdefinition", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output findTestdefinition([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("findTestdefinition", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void findTestdefinitionAsync(Input anInput) {
            this.findTestdefinitionAsync(anInput, null);
        }
        
        /// <remarks/>
        public void findTestdefinitionAsync(Input anInput, object userState) {
            if ((this.findTestdefinitionOperationCompleted == null)) {
                this.findTestdefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindTestdefinitionOperationCompleted);
            }
            this.InvokeAsync("findTestdefinition", new object[] {
                        anInput}, this.findTestdefinitionOperationCompleted, userState);
        }
        
        private void OnfindTestdefinitionOperationCompleted(object arg) {
            if ((this.findTestdefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findTestdefinitionCompleted(this, new findTestdefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkCompoundName", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output checkCompoundName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("checkCompoundName", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void checkCompoundNameAsync(Input anInput) {
            this.checkCompoundNameAsync(anInput, null);
        }
        
        /// <remarks/>
        public void checkCompoundNameAsync(Input anInput, object userState) {
            if ((this.checkCompoundNameOperationCompleted == null)) {
                this.checkCompoundNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckCompoundNameOperationCompleted);
            }
            this.InvokeAsync("checkCompoundName", new object[] {
                        anInput}, this.checkCompoundNameOperationCompleted, userState);
        }
        
        private void OncheckCompoundNameOperationCompleted(object arg) {
            if ((this.checkCompoundNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkCompoundNameCompleted(this, new checkCompoundNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:removeErrors", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output removeErrors([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("removeErrors", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void removeErrorsAsync(Input anInput) {
            this.removeErrorsAsync(anInput, null);
        }
        
        /// <remarks/>
        public void removeErrorsAsync(Input anInput, object userState) {
            if ((this.removeErrorsOperationCompleted == null)) {
                this.removeErrorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveErrorsOperationCompleted);
            }
            this.InvokeAsync("removeErrors", new object[] {
                        anInput}, this.removeErrorsOperationCompleted, userState);
        }
        
        private void OnremoveErrorsOperationCompleted(object arg) {
            if ((this.removeErrorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeErrorsCompleted(this, new removeErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:validateData", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output validateData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("validateData", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void validateDataAsync(Input anInput) {
            this.validateDataAsync(anInput, null);
        }
        
        /// <remarks/>
        public void validateDataAsync(Input anInput, object userState) {
            if ((this.validateDataOperationCompleted == null)) {
                this.validateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateDataOperationCompleted);
            }
            this.InvokeAsync("validateData", new object[] {
                        anInput}, this.validateDataOperationCompleted, userState);
        }
        
        private void OnvalidateDataOperationCompleted(object arg) {
            if ((this.validateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateDataCompleted(this, new validateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:listPreparationNumbers", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output listPreparationNumbers([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("listPreparationNumbers", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void listPreparationNumbersAsync(Input anInput) {
            this.listPreparationNumbersAsync(anInput, null);
        }
        
        /// <remarks/>
        public void listPreparationNumbersAsync(Input anInput, object userState) {
            if ((this.listPreparationNumbersOperationCompleted == null)) {
                this.listPreparationNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistPreparationNumbersOperationCompleted);
            }
            this.InvokeAsync("listPreparationNumbers", new object[] {
                        anInput}, this.listPreparationNumbersOperationCompleted, userState);
        }
        
        private void OnlistPreparationNumbersOperationCompleted(object arg) {
            if ((this.listPreparationNumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listPreparationNumbersCompleted(this, new listPreparationNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createErrorOrMessage", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output createErrorOrMessage([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("createErrorOrMessage", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void createErrorOrMessageAsync(Input anInput) {
            this.createErrorOrMessageAsync(anInput, null);
        }
        
        /// <remarks/>
        public void createErrorOrMessageAsync(Input anInput, object userState) {
            if ((this.createErrorOrMessageOperationCompleted == null)) {
                this.createErrorOrMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateErrorOrMessageOperationCompleted);
            }
            this.InvokeAsync("createErrorOrMessage", new object[] {
                        anInput}, this.createErrorOrMessageOperationCompleted, userState);
        }
        
        private void OncreateErrorOrMessageOperationCompleted(object arg) {
            if ((this.createErrorOrMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createErrorOrMessageCompleted(this, new createErrorOrMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:calculateDMSOAmount", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output calculateDMSOAmount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("calculateDMSOAmount", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void calculateDMSOAmountAsync(Input anInput) {
            this.calculateDMSOAmountAsync(anInput, null);
        }
        
        /// <remarks/>
        public void calculateDMSOAmountAsync(Input anInput, object userState) {
            if ((this.calculateDMSOAmountOperationCompleted == null)) {
                this.calculateDMSOAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OncalculateDMSOAmountOperationCompleted);
            }
            this.InvokeAsync("calculateDMSOAmount", new object[] {
                        anInput}, this.calculateDMSOAmountOperationCompleted, userState);
        }
        
        private void OncalculateDMSOAmountOperationCompleted(object arg) {
            if ((this.calculateDMSOAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.calculateDMSOAmountCompleted(this, new calculateDMSOAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:executeNamedOperation", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output executeNamedOperation([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string anOperation, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("executeNamedOperation", new object[] {
                        anOperation,
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void executeNamedOperationAsync(string anOperation, Input anInput) {
            this.executeNamedOperationAsync(anOperation, anInput, null);
        }
        
        /// <remarks/>
        public void executeNamedOperationAsync(string anOperation, Input anInput, object userState) {
            if ((this.executeNamedOperationOperationCompleted == null)) {
                this.executeNamedOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecuteNamedOperationOperationCompleted);
            }
            this.InvokeAsync("executeNamedOperation", new object[] {
                        anOperation,
                        anInput}, this.executeNamedOperationOperationCompleted, userState);
        }
        
        private void OnexecuteNamedOperationOperationCompleted(object arg) {
            if ((this.executeNamedOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.executeNamedOperationCompleted(this, new executeNamedOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:listProjects", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output listProjects([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("listProjects", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void listProjectsAsync(Input anInput) {
            this.listProjectsAsync(anInput, null);
        }
        
        /// <remarks/>
        public void listProjectsAsync(Input anInput, object userState) {
            if ((this.listProjectsOperationCompleted == null)) {
                this.listProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistProjectsOperationCompleted);
            }
            this.InvokeAsync("listProjects", new object[] {
                        anInput}, this.listProjectsOperationCompleted, userState);
        }
        
        private void OnlistProjectsOperationCompleted(object arg) {
            if ((this.listProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listProjectsCompleted(this, new listProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:retrieveErrors", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output retrieveErrors([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("retrieveErrors", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveErrorsAsync(Input anInput) {
            this.retrieveErrorsAsync(anInput, null);
        }
        
        /// <remarks/>
        public void retrieveErrorsAsync(Input anInput, object userState) {
            if ((this.retrieveErrorsOperationCompleted == null)) {
                this.retrieveErrorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveErrorsOperationCompleted);
            }
            this.InvokeAsync("retrieveErrors", new object[] {
                        anInput}, this.retrieveErrorsOperationCompleted, userState);
        }
        
        private void OnretrieveErrorsOperationCompleted(object arg) {
            if ((this.retrieveErrorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveErrorsCompleted(this, new retrieveErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:findUploadData", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output findUploadData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("findUploadData", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void findUploadDataAsync(Input anInput) {
            this.findUploadDataAsync(anInput, null);
        }
        
        /// <remarks/>
        public void findUploadDataAsync(Input anInput, object userState) {
            if ((this.findUploadDataOperationCompleted == null)) {
                this.findUploadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindUploadDataOperationCompleted);
            }
            this.InvokeAsync("findUploadData", new object[] {
                        anInput}, this.findUploadDataOperationCompleted, userState);
        }
        
        private void OnfindUploadDataOperationCompleted(object arg) {
            if ((this.findUploadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findUploadDataCompleted(this, new findUploadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:updateError", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output updateError([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("updateError", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void updateErrorAsync(Input anInput) {
            this.updateErrorAsync(anInput, null);
        }
        
        /// <remarks/>
        public void updateErrorAsync(Input anInput, object userState) {
            if ((this.updateErrorOperationCompleted == null)) {
                this.updateErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateErrorOperationCompleted);
            }
            this.InvokeAsync("updateError", new object[] {
                        anInput}, this.updateErrorOperationCompleted, userState);
        }
        
        private void OnupdateErrorOperationCompleted(object arg) {
            if ((this.updateErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateErrorCompleted(this, new updateErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:deleteUpload", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output deleteUpload([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("deleteUpload", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUploadAsync(Input anInput) {
            this.deleteUploadAsync(anInput, null);
        }
        
        /// <remarks/>
        public void deleteUploadAsync(Input anInput, object userState) {
            if ((this.deleteUploadOperationCompleted == null)) {
                this.deleteUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUploadOperationCompleted);
            }
            this.InvokeAsync("deleteUpload", new object[] {
                        anInput}, this.deleteUploadOperationCompleted, userState);
        }
        
        private void OndeleteUploadOperationCompleted(object arg) {
            if ((this.deleteUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUploadCompleted(this, new deleteUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:uploadSingleEntry", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output uploadSingleEntry([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("uploadSingleEntry", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void uploadSingleEntryAsync(Input anInput) {
            this.uploadSingleEntryAsync(anInput, null);
        }
        
        /// <remarks/>
        public void uploadSingleEntryAsync(Input anInput, object userState) {
            if ((this.uploadSingleEntryOperationCompleted == null)) {
                this.uploadSingleEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadSingleEntryOperationCompleted);
            }
            this.InvokeAsync("uploadSingleEntry", new object[] {
                        anInput}, this.uploadSingleEntryOperationCompleted, userState);
        }
        
        private void OnuploadSingleEntryOperationCompleted(object arg) {
            if ((this.uploadSingleEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadSingleEntryCompleted(this, new uploadSingleEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:uploadTable", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output uploadTable([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("uploadTable", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void uploadTableAsync(Input anInput) {
            this.uploadTableAsync(anInput, null);
        }
        
        /// <remarks/>
        public void uploadTableAsync(Input anInput, object userState) {
            if ((this.uploadTableOperationCompleted == null)) {
                this.uploadTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadTableOperationCompleted);
            }
            this.InvokeAsync("uploadTable", new object[] {
                        anInput}, this.uploadTableOperationCompleted, userState);
        }
        
        private void OnuploadTableOperationCompleted(object arg) {
            if ((this.uploadTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadTableCompleted(this, new uploadTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkUploadDataExists", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output checkUploadDataExists([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("checkUploadDataExists", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void checkUploadDataExistsAsync(Input anInput) {
            this.checkUploadDataExistsAsync(anInput, null);
        }
        
        /// <remarks/>
        public void checkUploadDataExistsAsync(Input anInput, object userState) {
            if ((this.checkUploadDataExistsOperationCompleted == null)) {
                this.checkUploadDataExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckUploadDataExistsOperationCompleted);
            }
            this.InvokeAsync("checkUploadDataExists", new object[] {
                        anInput}, this.checkUploadDataExistsOperationCompleted, userState);
        }
        
        private void OncheckUploadDataExistsOperationCompleted(object arg) {
            if ((this.checkUploadDataExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkUploadDataExistsCompleted(this, new checkUploadDataExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:updateUpload", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output updateUpload([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("updateUpload", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void updateUploadAsync(Input anInput) {
            this.updateUploadAsync(anInput, null);
        }
        
        /// <remarks/>
        public void updateUploadAsync(Input anInput, object userState) {
            if ((this.updateUploadOperationCompleted == null)) {
                this.updateUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateUploadOperationCompleted);
            }
            this.InvokeAsync("updateUpload", new object[] {
                        anInput}, this.updateUploadOperationCompleted, userState);
        }
        
        private void OnupdateUploadOperationCompleted(object arg) {
            if ((this.updateUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateUploadCompleted(this, new updateUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:returnWeightAndStructure", RequestNamespace="http://service.pdc.ws.bayer.com/xsd", ResponseNamespace="http://service.pdc.ws.bayer.com/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Output returnWeightAndStructure([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Input anInput) {
            object[] results = this.Invoke("returnWeightAndStructure", new object[] {
                        anInput});
            return ((Output)(results[0]));
        }
        
        /// <remarks/>
        public void returnWeightAndStructureAsync(Input anInput) {
            this.returnWeightAndStructureAsync(anInput, null);
        }
        
        /// <remarks/>
        public void returnWeightAndStructureAsync(Input anInput, object userState) {
            if ((this.returnWeightAndStructureOperationCompleted == null)) {
                this.returnWeightAndStructureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreturnWeightAndStructureOperationCompleted);
            }
            this.InvokeAsync("returnWeightAndStructure", new object[] {
                        anInput}, this.returnWeightAndStructureOperationCompleted, userState);
        }
        
        private void OnreturnWeightAndStructureOperationCompleted(object arg) {
            if ((this.returnWeightAndStructureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.returnWeightAndStructureCompleted(this, new returnWeightAndStructureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.pdc.ws.bayer.com/xsd")]
    public partial class Input {
        
        private PDCParameter[] configField;
        
        private PDCParameter[] inputField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("config", IsNullable=true)]
        public PDCParameter[] config {
            get {
                return this.configField;
            }
            set {
                this.configField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("input", IsNullable=true)]
        public PDCParameter[] input {
            get {
                return this.inputField;
            }
            set {
                this.inputField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.pdc.ws.bayer.com/xsd")]
    public partial class PDCParameter {
        
        private PDCMessage errorField;
        
        private System.Nullable<int> idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        private System.Nullable<int> positionField;
        
        private bool positionFieldSpecified;
        
        private string praefixField;
        
        private string unitField;
        
        private byte[] valueBlobField;
        
        private string valueCharField;
        
        private System.Nullable<decimal> valueNumField;
        
        private bool valueNumFieldSpecified;
        
        private System.Nullable<int> variableIdField;
        
        private bool variableIdFieldSpecified;
        
        private string variableNameField;
        
        private string variableTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PDCMessage error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool positionSpecified {
            get {
                return this.positionFieldSpecified;
            }
            set {
                this.positionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string praefix {
            get {
                return this.praefixField;
            }
            set {
                this.praefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] valueBlob {
            get {
                return this.valueBlobField;
            }
            set {
                this.valueBlobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string valueChar {
            get {
                return this.valueCharField;
            }
            set {
                this.valueCharField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> valueNum {
            get {
                return this.valueNumField;
            }
            set {
                this.valueNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueNumSpecified {
            get {
                return this.valueNumFieldSpecified;
            }
            set {
                this.valueNumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> variableId {
            get {
                return this.variableIdField;
            }
            set {
                this.variableIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool variableIdSpecified {
            get {
                return this.variableIdFieldSpecified;
            }
            set {
                this.variableIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string variableName {
            get {
                return this.variableNameField;
            }
            set {
                this.variableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string variableType {
            get {
                return this.variableTypeField;
            }
            set {
                this.variableTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.pdc.ws.bayer.com/xsd")]
    public partial class PDCMessage {
        
        private string idField;
        
        private string messageField;
        
        private PDCMessageType messageTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PDCMessageType messageType {
            get {
                return this.messageTypeField;
            }
            set {
                this.messageTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.pdc.ws.bayer.com/xsd")]
    public partial class PDCMessageType {
        
        private string logLevelField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string logLevel {
            get {
                return this.logLevelField;
            }
            set {
                this.logLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.pdc.ws.bayer.com/xsd")]
    public partial class Output {
        
        private PDCParameter[] annotatedInputField;
        
        private PDCMessage messageField;
        
        private PDCParameter[] outputField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("annotatedInput", IsNullable=true)]
        public PDCParameter[] annotatedInput {
            get {
                return this.annotatedInputField;
            }
            set {
                this.annotatedInputField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PDCMessage message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("output", IsNullable=true)]
        public PDCParameter[] output {
            get {
                return this.outputField;
            }
            set {
                this.outputField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void findTestdefinitionCompletedEventHandler(object sender, findTestdefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findTestdefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findTestdefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void checkCompoundNameCompletedEventHandler(object sender, checkCompoundNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkCompoundNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkCompoundNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void removeErrorsCompletedEventHandler(object sender, removeErrorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeErrorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeErrorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void validateDataCompletedEventHandler(object sender, validateDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void listPreparationNumbersCompletedEventHandler(object sender, listPreparationNumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listPreparationNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listPreparationNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void createErrorOrMessageCompletedEventHandler(object sender, createErrorOrMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createErrorOrMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createErrorOrMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void calculateDMSOAmountCompletedEventHandler(object sender, calculateDMSOAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class calculateDMSOAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal calculateDMSOAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void executeNamedOperationCompletedEventHandler(object sender, executeNamedOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class executeNamedOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal executeNamedOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void listProjectsCompletedEventHandler(object sender, listProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void retrieveErrorsCompletedEventHandler(object sender, retrieveErrorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveErrorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveErrorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void findUploadDataCompletedEventHandler(object sender, findUploadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findUploadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findUploadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void updateErrorCompletedEventHandler(object sender, updateErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void deleteUploadCompletedEventHandler(object sender, deleteUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void uploadSingleEntryCompletedEventHandler(object sender, uploadSingleEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadSingleEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadSingleEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void uploadTableCompletedEventHandler(object sender, uploadTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void checkUploadDataExistsCompletedEventHandler(object sender, checkUploadDataExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkUploadDataExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkUploadDataExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void updateUploadCompletedEventHandler(object sender, updateUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void returnWeightAndStructureCompletedEventHandler(object sender, returnWeightAndStructureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class returnWeightAndStructureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal returnWeightAndStructureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Output Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Output)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591