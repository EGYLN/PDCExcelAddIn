<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AtomFont" xml:space="preserve">
    <value>Font size of atom letters</value>
  </data>
  <data name="BondLength" xml:space="preserve">
    <value>Length of displayed bonds (Please use a dot ‘.‘ as decimal mark.)</value>
  </data>
  <data name="ChemicalDataSettings" xml:space="preserve">
    <value>Select to display on "Retrieve chemical data"</value>
  </data>
  <data name="ClearWorksheet" xml:space="preserve">
    <value>Removes all inputs from the worksheet</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Select to use atom color coding</value>
  </data>
  <data name="ColumnWidth" xml:space="preserve">
    <value>Number of pixels the width of the image should be scaled to.
This results in an equal column width for all rows containing a structure
drawing.</value>
  </data>
  <data name="ContactSupport" xml:space="preserve">
    <value>Opens the IT Service Portal to get help via FastTrack ticket.</value>
  </data>
  <data name="DeleteData" xml:space="preserve">
    <value>Deletes selected data sets in the database</value>
  </data>
  <data name="DisplayCarbon" xml:space="preserve">
    <value>Select to display carbon atoms in the structure image</value>
  </data>
  <data name="DisplayHydrogens" xml:space="preserve">
    <value>Select to display hydrogen atoms in the structure image</value>
  </data>
  <data name="Documentation" xml:space="preserve">
    <value>Open the PDC manual in a browser like Internet Explorer</value>
  </data>
  <data name="DontUseMeasurements" xml:space="preserve">
    <value>Creates ONLY a PDC sheet. Select if you do not ever want have measurements in the workbook at all. There is no way to add a measurementsheet afterwards.</value>
  </data>
  <data name="FormatChemicalDataSettings" xml:space="preserve">
    <value>Options regarding display of structure information</value>
  </data>
  <data name="LoginOther" xml:space="preserve">
    <value>PDC login with manual input of CWID and Windows password</value>
  </data>
  <data name="LoginWindows" xml:space="preserve">
    <value>PDC login with current Windows user</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Close session and log off current user.</value>
  </data>
  <data name="MultipleMeasurementTable" xml:space="preserve">
    <value>Creates a pdc sheet and a measurement sheet with several measurement tables
(recommended for test definitions with few results and variables and if
compounds are tested more than once)</value>
  </data>
  <data name="MyAccessibleTests" xml:space="preserve">
    <value>Only display test definitions with upload rights</value>
  </data>
  <data name="NewPdcWorksheet" xml:space="preserve">
    <value>Open test definition for data input</value>
  </data>
  <data name="OffsetBelow" xml:space="preserve">
    <value>Place compound information in a column</value>
  </data>
  <data name="OffsetRight" xml:space="preserve">
    <value>Place compound information in a row</value>
  </data>
  <data name="PdcVersionInfo" xml:space="preserve">
    <value>PDC Client version, current stage, installation path</value>
  </data>
  <data name="RetrieveChemicalData" xml:space="preserve">
    <value>Load structure information for selected compounds (preparations, structure formula, Mol weight, etc.)</value>
  </data>
  <data name="RetrieveMeasurements" xml:space="preserve">
    <value>Load raw data (if available) and load to measurement sheet (if available). [CTRL] + [D]</value>
  </data>
  <data name="RowHeigth" xml:space="preserve">
    <value>Number of pixels the height of the image should be scaled to.
This results in an equal row height for all rows containing a structure
drawing.</value>
  </data>
  <data name="SearchTestData" xml:space="preserve">
    <value>Search the test data for all selected inputs on the worksheet and display search results</value>
  </data>
  <data name="SelectButton" xml:space="preserve">
    <value>Create PDC sheet(s) for selected Test definition version</value>
  </data>
  <data name="ShiftCols" xml:space="preserve">
    <value># of columns to shift from selected column</value>
  </data>
  <data name="ShiftRows" xml:space="preserve">
    <value># of rows to shift from selected column</value>
  </data>
  <data name="SingleMeasurementTable" xml:space="preserve">
    <value>Create pdc sheet and a measurement with one measurement table
(recommended for test definitions with many results and variables and where one
compound is only tested once)</value>
  </data>
  <data name="TestName" xml:space="preserve">
    <value>% and _ can be used as wildcards for none, one or
many and exactly one character.</value>
  </data>
  <data name="TextFont" xml:space="preserve">
    <value>Font size of all letters that are not atom letters</value>
  </data>
  <data name="TransparentBackground" xml:space="preserve">
    <value>Select to make the image transparent (background does
not hide structures below, e.g. in powerpoint presentation)</value>
  </data>
  <data name="UploadChanges" xml:space="preserve">
    <value>Updates only selected records in the database with current display</value>
  </data>
  <data name="UploadTestData" xml:space="preserve">
    <value>Load all data from the current test sheet</value>
  </data>
  <data name="ValidateWorksheet" xml:space="preserve">
    <value>Input check (e.g. compound verification, mandatory inputs)</value>
  </data>
</root>