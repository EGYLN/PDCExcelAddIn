<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IVYChemistry</name>
    </assembly>
    <members>
        <member name="T:BBS.ST.IVY.Chemistry.Core.CartridgeContext">
            <summary>
            Holds and manages the DatabaseConfiguration.
            Is a factory for <see cref="T:BBS.ST.IVY.Chemistry.Core.QueryBuilder"/> and <see cref="T:BBS.ST.IVY.Chemistry.Core.StructureBroker"/> / <see cref="T:BBS.ST.IVY.Chemistry.Core.ReactionBroker"/> objects
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.CartridgeContext.GetReactionBroker(System.Object)">
            <summary>
            Get the <see cref="T:BBS.ST.IVY.Chemistry.Core.ReactionBroker"/> for this Cartridge.
            </summary>
            <param name="connection">an open db connection</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Core.ReactionBroker"/></returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidDBConnectionTypeException">database connection type is not supported.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.CartridgeContext.GetStructureBroker(System.Object)">
            <summary>
            Get the <see cref="T:BBS.ST.IVY.Chemistry.Core.StructureBroker"/> for this Cartridge.
            </summary>
            <param name="connection">an open db connection</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Core.StructureBroker"/></returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidDBConnectionTypeException">database connection type is not supported.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.CartridgeContext.GetQueryBuilder">
            <summary>
            Get a cartridge specific query builder.
            </summary>
            <returns>cartridge specific query builder</returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.CartridgeContext.StructureConfiguration">
            <summary>
            get or set the current structure configuration.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.CartridgeContext.ReactionConfiguration">
            <summary>
            get or set the current reaction configuration.
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject">
            <summary>
            IChemObject The common interface for all chemical objects.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject.ID">
            <summary>
            Represents the identifier of a <c>ChemObject</c>
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject.Value">
            <summary>
            Returns or sets the internal representation of a <c>ChemObject</c>
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject.IsEmpty">
            <summary>
            Should return true if both id and value are empty
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject.HasQueryFeature">
            <summary>
            flag indicating if the content has any query feature.
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IReactionComparator">
            <summary>
            Interface to be implemented by any class that is used
            to test two Reactions for chemical equality
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.IReactionComparator.AreReactionsEqual(BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction,BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction)">
            <summary>
            comparison function for testing chemical equality of two Reaction objects
            </summary>
            <param name="firstReaction">the first Reaction</param>
            <param name="secondReaction">the second Reaction</param>
            <returns>true if both Reactions are equal</returns>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IStructureComparator">
            <summary>
            Interface to be implemented by any class that is used
            to test two Structures for chemical equality
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.IStructureComparator.AreStructuresEqual(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure,BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            comparison function for testing chemical equality of two Structure objects
            </summary>
            <param name="firstStructure">the first Structure</param>
            <param name="secondStructure">the second Structure</param>
            <returns>true if both Structures are equal</returns>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.Chemistry.MolMassType">
            <summary>
            Enumeration of mol mass types
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.Chemistry.MolMassType.Exact">
            <summary>
            EXACT=0
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.Chemistry.MolMassType.Nominal">
            <summary>
            NOMINAL=1
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.Chemistry.MolMassType.Relative">
            <summary>
            RELATIV=2
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.Chemistry.PrimitiveMolfileComparator">
            <summary>
            This <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IStructureComparator"/> implementation uses MDL Molfiles for testing
            the chemical equality of two Structure objects. It strips off their
            header lines and atomic coordinates before comparing the rest of the Molfiles
            for String equality.
            </summary>
            <remarks>
            This implementation is quite simple, as it will return false if two Structures
            differ only in the order their atoms appear in their connection tables,
            even though the two Structures might be chemically equal.
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PrimitiveMolfileComparator.AreStructuresEqual(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure,BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            comparison function for testing chemical equality of two Structure objects
            </summary>
            <param name="firstStructure">the first Structure</param>
            <param name="secondStructure">the second Structure</param>
            <returns>
            true if both Structures are considered chemically equal;
            false if the Structures differ, or at least one of them is null, or the Value of at least one of them is null
            </returns>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.Chemistry.PrimitiveReactionComparator">
            <summary>
            This <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IReactionComparator"/> implementation uses the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.PrimitiveMolfileComparator"/> for testing
            the chemical equality of two Structure objects.
            </summary>
            <remarks>
            This implementation is quite simple, as it will return false if two Reactions
            differ only in the order in which their reactants and/or products appear,
            even though the two Reactions might be chemically equal.
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PrimitiveReactionComparator.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PrimitiveReactionComparator.AreReactionsEqual(BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction,BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction)">
            <summary>
            comparison function for testing chemical equality of two Reaction objects
            </summary>
            <param name="firstReaction">the first Reaction</param>
            <param name="secondReaction">the second Reaction</param>
            <returns>true if both Reactions are equal</returns>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable">
            <summary>
            This Class represents a PTable.
            It is possible to get different mol weights from a Structure object or a molecular formula.
            </summary>
            <remarks>
            This class is implemented as a singleton, i.e. it is not possible to switch instances during run time
            once you have generated an instance using either the default or a custom PTable xml
            </remarks>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.Myself">
            <summary>
            This class is a singleton....
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.#ctor">
            <summary>
            Default constructor (an embedded PTable will be loaded)
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidPTableException">The internal PTable could not be located or doesn't conform to the XML-Schema.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.#ctor(System.String)">
            <summary>
            Constructor that gets a PTable from a file
            </summary>
            <param name="path">path of the PTable</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidPTableException">The PTable doesn't conform to the XML-Schema.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.GetInstance">
            <summary>
            Returns the singleton instance of PTable.
            </summary>
            <remarks>
            If no instance has been created yet, this method also creates it using the built-in
            default PTable definition.
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.RegisterCustomPTable(System.String)">
            <summary>
            Creates the singleton instance of PTable using a customized PTable xml file.
            </summary>
            <remarks>
            If you want to register a customized PTable definition, use this method before
            making any calls to the <see cref="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.GetInstance"/> method.
            </remarks>
            <param name="path">Absolute path of the custom PTable xml file</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.SingletonException">Another PTable has already been registered.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidPTableException">The PTable is invalid.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.GetRelativeMass(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            returns the relative mol weight of a structure
            </summary>
            <param name="structure">the structure</param>
            <returns>the mol weight</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidStructureException">The Structure Object contains an invalid mol formula.</exception>
            <remarks>
            The "relative" mol weight is the sum of all unrounded atomic masses,
            with their isotopes weighted according to their natural abundances
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.GetRelativeMass(System.String)">
            <summary>
            returns the relative mol weight of a mol formula
            </summary>
            <param name="molFormula">the mol formula</param>
            <returns>the mol weight</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolformulaException">The mol formula is invalid.</exception>
            <remarks>
            The "relative" mol weight is the sum of all unrounded atomic masses,
            with their isotopes weighted according to their natural abundances
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.GetExactMass(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            returns the exact mol weight of a structure
            </summary>
            <param name="structure">the structure</param>
            <returns>the mol weight</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidStructureException">The Structure Object contains an invalid mol formula.</exception>
            <remarks>
            The "exact" mol weight is the sum of all unrounded atomic masses
            of the isotopes with highest natural abundance 
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.GetExactMass(System.String)">
            <summary>
            returns the exact mol weight of a mol formula
            </summary>
            <param name="molFormula">the mol formula</param>
            <returns>the mol weight</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolformulaException">The mol formula is invalid.</exception>
            <remarks>
            The "exact" mol weight is the sum of all unrounded atomic masses
            of the isotopes with highest natural abundance 
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.GetNominalMass(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            returns the nominal mol weight of a structure
            </summary>
            <param name="structure">the structure</param>
            <returns>the mol weight</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidStructureException">The Structure Object contains an invalid mol formula.</exception>
            <remarks>
            The "nominal" mol weight is the sum of all atomic masses
            of the isotopes with highest natural abundance,
            rounded to the nearest integer number
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.GetNominalMass(System.String)">
            <summary>
            returns the nominal mol weight of a mol formula
            </summary>
            <param name="molFormula">the mol formula</param>
            <returns>the mol weight</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolformulaException">The mol formula is invalid.</exception>
            <remarks>
            The "nominal" mol weight is the sum of all atomic masses
            of the isotopes with highest natural abundance,
            rounded to the nearest integer number
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.GetRelativeMassDistribution(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
             <summary>
             Returns the relative mass distribution of all chemical elements within a structure
             </summary>
             <param name="structure">the structure</param>
             <returns>An <see cref="T:System.Collections.IDictionary"/> containing the relative mass distribution with the atomic symbols as key
             and the relative mass proportion as a double between 0.0 and 1.0</returns>
             <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidStructureException">The Structure Object contains an invalid mol formula.</exception>
             <example>
             Here is an example of formatting a string containing the information from GetRelativeMassDistribution:
             <code>
             public string GetFormattedMassDistributionString(Structure structure)
             {
                 string returnString = string.Empty;
                 const string entrySeparator = " ; ";
                 IDictionary massDistribution = PTable.GetInstance().GetRelativeMassDistribution(structure);
             
                 foreach (string symbol in massDistribution.Keys)
                 {
                     // the formatting string of the following statement means:
                     // {0,-3} -&gt; argument 0 is converted to a left justified string of width 3
                     // {1,8:P2} -&gt; argument 1 is converted to a right justified string of width 8,
                     //             where argument 1 must be a numeric value that will be converted
                     //             using the "Percent" number format with a precision of 2 digits
                     returnString += String.Format("{0,-3}{1,7:P2}", symbol, massDistribution[symbol]);
                     returnString += entrySeparator;
                 }
             
                 if (returnString != string.Empty)
                 {
                     // we need to remove the extra separator at the end
                     returnString = returnString.Remove(returnString.Length - entrySeparator.Length, entrySeparator.Length);
                 }
             
                 return returnString;
             }
            </code></example>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.GetRelativeMassDistribution(System.String)">
             <summary>
             Returns the relative mass distribution of all chemical elements within a mol formula
             </summary>
             <param name="molFormula">The molecular formula</param>
             <returns>An <see cref="T:System.Collections.IDictionary"/> containing the relative mass distribution with the atomic symbols as key
             and the relative mass proportion as a double between 0.0 and 1.0</returns>
             <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolformulaException">The mol formula is invalid.</exception>
             <example>
             Here is an example of formatting a string containing the information from GetRelativeMassDistribution:
             <code>
             public string GetFormattedMassDistributionString(string molFormula)
             {
                 string returnString = string.Empty;
                 const string entrySeparator = " ; ";
                 IDictionary massDistribution = PTable.GetInstance().GetRelativeMassDistribution(molFormula);
             
                 foreach (string symbol in massDistribution.Keys)
                 {
                     // the formatting string of the following statement means:
                     // {0,-3} -&gt; argument 0 is converted to a left justified string of width 3
                     // {1,8:P2} -&gt; argument 1 is converted to a right justified string of width 8,
                     //             where argument 1 must be a numeric value that will be converted
                     //             using the "Percent" number format with a precision of 2 digits
                     returnString += String.Format("{0,-3}{1,7:P2}", symbol, massDistribution[symbol]);
                     returnString += entrySeparator;
                 }
             
                 if (returnString != string.Empty)
                 {
                     // we need to remove the extra separator at the end
                     returnString = returnString.Remove(returnString.Length - entrySeparator.Length, entrySeparator.Length);
                 }
             
                 return returnString;
              }
            </code></example>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.BuildPTables">
            <summary>
            The different internal PTables will be filled and collected in <see cref="F:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.myAllMassTables"/>.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.GetDecomposedMolFormula(System.String)">
            <summary>
            this method decomposes the mol formula (String)
            Step 1 = all characters of the mol formula will be filled into an <see cref="T:System.Collections.ArrayList"/> (molFormulaList).
            Step 2 = build atoms with multiplier (moleculeFragment [e.g. Al2])
            Step 3 = the atoms with multiplier will be filled into a <see cref="T:System.Collections.Hashtable"/> (molecule)
            </summary>
            <param name="molFormula">string that contains a mol formula (e.g. Al2O3)</param>
            <returns>an <see cref="T:System.Collections.IDictionary"/> containing the mol formula's chemical elements and their atom counts</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolformulaException">The mol formula is invalid.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.AddAtomToMolecule(System.String,System.Int32,System.Collections.IDictionary)">
            <summary>
            This method adds the single atoms of a molecule to a hash table that contains all
            atoms of the structure.
            The count of the atoms will be filled as value into the hash table
            </summary>
            <param name="atom"></param>
            <param name="multiplier"></param>
            <param name="molecule"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.CalculateMolmass(BBS.ST.IVY.Chemistry.Core.Chemistry.MolMassType,System.Collections.IDictionary)">
            <summary>
            This method calculates the different mol masses
            </summary>
            <param name="molMassType">Type of mol mass that should be calculate</param>
            <param name="molecule">an <see cref="T:System.Collections.IDictionary"/> containing all Elements and atom counts</param>
            <returns>The calculated mol mass</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolformulaException">The mol formula is invalid.</exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.PTableXMLSchema">
            <summary>
            Returns an <see cref="T:System.Xml.Schema.XmlSchema"/> that contains the XML-schema that will be used for validation
            of the internal or external PTable
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.PTableXMLSchemaAsString">
            <summary>
            Returns a string that contains the XML-schema that will be used for validation
            of the internal or external PTable
            </summary>
            <exception cref="T:System.IO.IOException"></exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.InternalPTable">
            <summary>
            Returns the internal PTable as XML-DataDocument.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.PTable.InternalPTableAsString">
            <summary>
            Returns the internal PTable as a String containing an XML document
            </summary>
            <exception cref="T:System.IO.IOException">The internal PTable document is missing.</exception>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction">
            <summary>
            This class represents a reaction.
            It is able to give information about the number of reactants and products.
            It can be created from an RXN-File, a database result or a String.
            It is also possible to build or manipulate a reaction with Structure-objects.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.#ctor(BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction)">
            <summary>
            Constructor that needs another Reaction
            </summary>
            <param name="reaction">a reaction</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.#ctor(System.String)">
            <summary>
            Constructor that needs a String that contains an MDL RXN-File
            </summary>
            <param name="rxnFileString"></param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">An invalid Rxn file was used.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.#ctor(BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile)">
            <summary>
            Constructor that needs an <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile"/> object
            </summary>
            <param name="mdlRxnFile"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.#ctor(System.String,BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction)">
            <summary>
            Constructor that needs an ID and another Reaction
            </summary>
            <param name="id">the ID of the Reaction</param>
            <param name="reaction">a reaction</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.#ctor(System.String,System.String)">
            <summary>
            Constructor that needs an ID and a String that contains an MDL RXN-File
            </summary>
            <param name="id">the ID of the Reaction</param>
            <param name="rxnFileString">the String that contains an MDL RXN-File</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.#ctor(System.String,BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile)">
            <summary>
            Constructor that needs an ID and an <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile"/> object
            </summary>
            <param name="id">the ID of the Reaction</param>
            <param name="mdlRxnFile">the <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile"/> object</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.AddProduct(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            Adds a new product
            </summary>
            <param name="product">a Structure object</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">
            thrown when the added Structure does not fit with the already existing parts of
            the Reaction</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.AddProductByIndex(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure,System.Int32)">
            <summary>
            Adds a product (Structure object) at the specified index
            </summary>
            <param name="product">a Structure object</param>
            <param name="index">Index of the added structure (Container starts at 0)
            </param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">
            thrown when the added Structure does not fit with the already existing parts of
            the Reaction</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is out of bounds.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.AddProductByCompoundNumber(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure,System.Int32)">
            <summary>
            Adds a product (Structure object) at the specified Position
            </summary>
            <param name="product">a Structure object</param>
            <param name="position">Position of the added structure (compounds starts at 1)</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">
            thrown when the added Structure does not fit with the already existing parts of
            the Reaction</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CompoundNumberOutOfRangeException">position is out of range.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.DeleteProduct(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            deletes a product from the reaction
            </summary>
            <param name="product">the structure(product) that should be deleted</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.StructureNotFoundException">product was not found in this reaction.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.DeleteProductByIndex(System.Int32)">
            <summary>
            Deletes a product from the reaction
            </summary>
            <param name="index">index of this product within the product side of the reaction (Container starts at 0)</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is out of range.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.DeleteProductByCompoundNumber(System.Int32)">
            <summary>
            Deletes a product from the reaction
            </summary>
            <param name="position">Position of this product within the products side of the reaction (Container starts at 1)</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CompoundNumberOutOfRangeException">position is out of range.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.ReplaceProductByIndex(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure,System.Int32)">
            <summary>
            Replaces a product at a specified index
            </summary>
            <param name="index">Index of the product</param>
            <param name="newProduct">the new product</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">
            thrown when the replaced Structure does not fit with the already existing parts of
            the Reaction</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is out of range.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.ReplaceProductByCompoundNumber(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure,System.Int32)">
            <summary>
            Replaces a product at a specified position
            </summary>
            <param name="position">Position of the product</param>
            <param name="newProduct">the new product</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">
            thrown when the replaced Structure does not fit with the already existing parts of
            the Reaction</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CompoundNumberOutOfRangeException">position is out of range.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.ReplaceProduct(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure,BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            replaces a product
            </summary>
            <param name="oldProduct">the product which should be replaced</param>
            <param name="newProduct">the new product</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">
            thrown when the replaced Structure does not fit with the already existing parts of
            the Reaction</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.StructureNotFoundException">product was not found in this reaction.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.AddReactant(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            Adds a structure as reactant
            </summary>
            <param name="reactant">a Structure object</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">
            thrown when the added Structure does not fit with the already existing parts of
            the Reaction</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.AddReactantByIndex(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure,System.Int32)">
            <summary>
            Adds a reactant (Structure object) at the specified index
            </summary>
            <param name="reactant">a Structure object</param>
            <param name="index">Index of the added structure (Container starts at 0)</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">
            thrown when the added Structure does not fit with the already existing parts of
            the Reaction</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is out of range.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.AddReactantByCompoundNumber(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure,System.Int32)">
            <summary>
            Adds a reactant (Structure object) at the specified Position
            </summary>
            <param name="reactant">a Structure object</param>
            <param name="position">Position of the added structure (Compounds starts at 1)</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">
            thrown when the added Structure does not fit with the already existing parts of
            the Reaction</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CompoundNumberOutOfRangeException">position is out of range.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.DeleteReactant(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            Deletes a reactant from the reaction
            </summary>
            <param name="reactant">Reactant that has to be delete</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.StructureNotFoundException">reactant was not found in this reaction.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.DeleteReactantByIndex(System.Int32)">
            <summary>
            Deletes a reactant from the reaction
            </summary>
            <param name="index">index of this reactant within the product side of the reaction (Container starts at 0)</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is out of range.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.DeleteReactantByCompoundNumber(System.Int32)">
            <summary>
            Deletes a reactant from the reaction
            </summary>
            <param name="position">Position of this product within the products side of the reaction (Container starts at 1)</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CompoundNumberOutOfRangeException">position is out of range.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.ReplaceReactantByIndex(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure,System.Int32)">
            <summary>
            Replaces a reactant
            </summary>
            <param name="index">the index of the reactant</param>
            <param name="newReactant">the new reactant</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">
            thrown when the replaced Structure does not fit with the already existing parts of
            the Reaction</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is out of range.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.ReplaceReactantByCompoundNumber(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure,System.Int32)">
            <summary>
            Replaces a reactant
            </summary>
            <param name="position">the position of the reactant</param>
            <param name="newReactant">the new reactant</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">
            thrown when the replaced Structure does not fit with the already existing parts of
            the Reaction</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CompoundNumberOutOfRangeException">position is out of range.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.ReplaceReactant(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure,BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            replaces a reactant
            </summary>
            <param name="oldReactant">the reactant which should be replaced</param>
            <param name="newReactant">the new reactant</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">
            thrown when the replaced Structure does not fit with the already existing parts of
            the Reaction</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.StructureNotFoundException">reactant was not found in this reaction.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.ToString">
            <summary>
            Returns the internal representation of a Reaction as a string
            </summary>
            <returns>The Reaction as a string</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.Clone">
            <summary>
            creates a deep clone of the Reaction object
            </summary>
            <returns>a complete copy of this object</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.GetDataFromInnerRxnFile">
            <summary>
            Gets data from the inner RXN-File
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.HarmonizeVersionAndNewline(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            There can only be one version of Structure objects in a Reaction object!
            This method checks if there is only one version of Structure objects
            If the new structure has a different version, we attempt to convert the whole Reaction file to V3000;
            this only works if MDL Draw is available. If not, an exception is thrown.
            Additionally, this method takes care of harmonizing the newline characters if necessary.
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">Reaction objects can't contain structures that are based on different molfile versions if you do not have MDL Draw installed on your machine.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">This RXN file has an unknown version.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.AreAllChemObjectsStructures(System.Collections.IEnumerable)">
            <summary>
            checks if all members of a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> are Structures
            </summary>
            <param name="chemObjectList">the list</param>
            <returns>false if at least one member is not a Structure</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.RebuildInnerRxnFile">
            <summary>
            rebuilds the <see cref="F:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.myInnerRxnFile"/> from <see cref="F:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.myListOfReactants"/> and <see cref="F:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.myListOfProducts"/>
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">
            Thrown when a valid version for the <see cref="F:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.myInnerRxnFile"/> cannot be determined
            </exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.HasQueryFeature">
            <summary>
            gets the flag if the content contains any query feature.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.Reactants">
            <summary>
            Returns or sets a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> with all reactants (Structure objects)
            </summary>
            <remarks>
            Be careful with this Property! The <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> is given as a reference here, so that all changes
            you make to it "outside" of this Reaction object will still affect the Reaction itself!
            Make sure you make a copy of this list if you intend to modify it for purposes other than
            modifying this Reaction object! 
            </remarks>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">
            thrown when at least one member of <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> is not a Structure</exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.Products">
            <summary>
            Returns or sets a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> with all products (Structure objects)
            </summary>
            <remarks>
            Be careful with this Property! The <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> is given as a reference here, so that all changes
            you make to it "outside" of this Reaction object will still affect the Reaction itself!
            Make sure you make a copy of this list if you intend to modify it for purposes other than
            modifying this Reaction object! 
            </remarks>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">
            thrown when at least one member of the <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> is not a Structure</exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.ProductCount">
            <summary>
            Returns the number of products
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.ReactantCount">
            <summary>
            Returns the number of reactants
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.SymbolicReaction">
            <summary>
            Returns the reaction as symbolic string, e.g. "A + B -> C + D"
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.HasMappingInfo">
            <summary>
            Returns or sets if "Mapping Infos" are available
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.ID">
            <summary>
            Represents the identifier of a reaction object
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.Value">
            <summary>
            Returns or sets the value of a reaction object
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">An invalid Rxn file was used.</exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.IsValueEmpty">
            <summary>
            checks if the Structure has an empty Value
            </summary>
            <returns>false if the object contains a Value different from null or the empty string</returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.IsIdEmpty">
            <summary>
            checks if the object has an empty ID
            </summary>
            <returns>false if the object contains an ID different from null or the empty string</returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.IsEmpty">
            <summary>
            checks if the object does not contain any information
            </summary>
            <returns>false if the object contains an ID and/or a Value</returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction.InnerRxnFile">
            <summary>
            Only used for internal purposes! Do not make this property public!
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure">
            <summary>
            This class represents a chemical Structure. 
            It can contains a single molecule and also a group of molecules.
            It is possible to get the fragments of it (if available)
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.#ctor">
            <summary>
            Default constructor (an empty Structure will be created)
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.#ctor(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            Constructor that creates a Structure from another Structure
            </summary>
            <param name="structure">the "source" Structure</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.#ctor(BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile)">
            <summary> 
            Constructor that creates a Structure by a <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile"/>
            </summary>
            <param name="mdlMolfile">the <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile"/> that contains the Structure</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.#ctor(System.String)">
            <summary>
            Constructor that creates a Structure by a string that contains a MolFile
            </summary>
            <param name="molfileString">String that contains a MolFile</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolfileException">
            Thrown when <paramref name="molfileString"/> does not represent a valid MDL Molfile.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.#ctor(System.String,BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            Constructor that creates a Structure by an ID and another Structure
            </summary>
            <param name="id">the ID of the Structure</param>
            <param name="structure">the "source" structure</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.#ctor(System.String,BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile)">
            <summary>
            Constructor that creates a Structure by an ID and an <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile"/>
            </summary>
            <param name="id">the ID of the Structure </param>
            <param name="mdlMolfile">the <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile"/> that contains the Structure</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.#ctor(System.String,System.String)">
            <summary>
            Constructor that creates a Structure by an ID and a string that contains a MolFile
            </summary>
            <param name="id">the ID of the Structure </param>
            <param name="molfileString">String that contains a MolFile</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolfileException">
            Thrown when <paramref name="molfileString"/> does not represent a valid MDL Molfile.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.Clone">
            <summary>
            creates a deep clone of the Structure object
            </summary>
            <returns>a complete copy of this object</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.ToString">
            <summary>
            Returns the internal representation of a Structure as a string
            </summary>
            <returns>The Structure as a string</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.CalculateFragmentProperties">
            <summary>
            this method uses MdlDrawUtil to (re)calculate all fragment related properties.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.MolweightExact">
            <summary>
            Returns the exact mol weight
            </summary>
            <remarks>
            The "exact" mol weight is the sum of all unrounded atomic masses
            of the isotopes with highest natural abundance 
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.MolweightNominal">
            <summary>
            Returns the nominal molweight
            </summary>
            <remarks>
            The "nominal" molweight is the sum of all atomic masses
            of the isotopes with highest natural abundance,
            rounded to the nearest integer number
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.MolweightRelative">
            <summary>
            Returns the relative molweight
            </summary>
            <remarks>
            The "relative" molweight is the sum of all unrounded atomic masses,
            with their isotopes weighted according to their natural abundances
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.MolweightFromDB">
            <summary>
            Returns or sets the molweight from the database
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoMolweightAvailableException">No molweight from DB available.</exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.MolweightFromSgroupData">
            <summary>
            gets the molweight calculated from sgroup data identified by <see cref="P:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.CustomMolweightSGroupIdentifier"/>.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.Fragments">
            <summary>
            Returns an <see cref="T:System.Collections.ArrayList"/> that contains the fragments of the structure (if available)
            </summary>
            <remarks>
            At the moment, it is not possible to create a Structure object from a bunch of fragments.
            This means that if you alter any item of Structure.Fragments, the original Structure object will 
            currently NOT be affected. Be aware that this behavior may change in a future release!
            </remarks>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidStructureException">Invalid Structure.</exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.IsNoStructure">
            <summary>
            Returns true if the structure is a "NOSTRUCTURE"
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.Molformula">
            <summary>
            Returns the molformula as calculated, with fragments separated by dots, e.g. "C2H6O.H2O"
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.MolformulaFromDB">
            <summary>
            Returns or sets the molformula from the database
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoMolformulaAvailableException">No molformula from DB available.</exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.HasFragments">
            <summary>
            Returns true if the structure contains more than one molecule
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.HasQueryFeature">
            <summary>
            gets the flag if the content contains any query feature.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.NumberOfFragments">
            <summary>
            Returns the number of fragments
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.ID">
            <summary>
            Represents the identifier of a Structure
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.FlattenedValue">
            <summary>
            Returns the internal representation of the structure with zero z coodinates.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.Value">
            <summary>
            Returns or sets the internal representation of the structure
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolfileException">
            Thrown when Value is set to a string that does not represent a valid MDL Mol file.
            </exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.IsValueEmpty">
            <summary>
            checks if the Structure has an empty Value
            </summary>
            <returns>false if the object contains a Value different from null or the empty string</returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.IsIdEmpty">
            <summary>
            checks if the object has an empty ID
            </summary>
            <returns>false if the object contains an ID different from null or the empty string</returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.IsEmpty">
            <summary>
            checks if the object does not contain any information
            </summary>
            <returns>false if the object contains an ID and/or a Value</returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.ChemicalValue">
            <summary>
            This value returns a mol file (String) without the header (first 3 or 4 rows),
            without positions of the single atoms, and in case it is in V2000 format,
            all numeric count/bond/atom line entries that contain spaces (" "),
            are filled with a single "0" value each.
            </summary>
            <remarks>
            This property is for internal use only (currently used by <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.PrimitiveMolfileComparator"/>).
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.ValueWithoutHeader">
            <summary>
            This value returns a mol file (String) without the header (first 3 or 4 rows).
            </summary>
            <remarks>
            This property is for internal use only (e.g. for building RXN files).
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure.InnerMolfile">
            <summary>
            this getter is only used internally!
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.ChemObjectFactory">
            <summary>
            default implementation of the <see cref="T:BBS.ST.IVY.Chemistry.Core.IChemObjectFactory"/> interface
            </summary>
            <remarks>
            this factory creates an instance of Structure or Reaction, depending on the chosen method;
            for creation, a molfile string or rxnfile string is needed;
            additionally, you can assign an ID to the freshly created Structure or Reaction.
            Note that ChemObjectFactory is implemented as a singleton, which means that there is only one instance
            of it per runtime environment, and that you do not instantiate it directly. Use the GetInstance() method instead.
            </remarks>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.IChemObjectFactory">
            <summary>
            Interface IChemObjectFactory
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.IChemObjectFactory.GetStructureFromMolfile(System.String)">
            <summary>
            generates a structure from molfile
            </summary>
            <param name="molfile"></param>
            <returns>the structure from molfile</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.IChemObjectFactory.GetStructureFromMolfile(System.String,System.String)">
            <summary>
            generates a structure from molfile with the id
            </summary>
            <param name="id"></param>
            <param name="molfile"></param>
            <returns>the structure from molfile with the id</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.IChemObjectFactory.GetNoStructure">
            <summary>
            creates a NoStructure
            </summary>
            <returns>a NoStructure</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.IChemObjectFactory.GetReactionFromRxnFile(System.String)">
            <summary>
            creates a reaction from rxnfile
            </summary>
            <param name="rxnFile"></param>
            <returns>a reaction from rxnfile</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.IChemObjectFactory.GetReactionFromRxnFile(System.String,System.String)">
            <summary>
            creates a reaction from rxnfile with the id
            </summary>
            <param name="id"></param>
            <param name="rxnFile"></param>
            <returns>a reaction from rxnfile with the id</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.IChemObjectFactory.GetIChemObjectFromClipboard">
            <summary>
            creates a reaction or structure from clipboard.
            </summary>
            <returns>a reaction or structure from clipboard or null if clipboard does not contain an approbiate object.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.IChemObjectFactory.GetNormalizedChemObject(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject,BBS.ST.IVY.Chemistry.Util.DisplayPreferences)">
            <summary>
            provides an IChemObject that is normalized with respect to the provided DisplayPreferences
            </summary>
            <param name="chemObject">the ChemObject to normalize</param>
            <param name="preferences">the desired DisplayPreferences</param>
            <returns>the normalized ChemObject</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectFactory.#ctor">
            <summary>
            this class is a singleton
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectFactory.GetInstance">
            <summary>
            there is no constructor, so you need to call at first this method
            </summary>
            <returns>the one and only instance of <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectFactory"/></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectFactory.GetStructureFromMolfile(System.String)">
            <summary>
            generates a structure from molfile
            </summary>
            <param name="molfile">a molfile</param>
            <returns>the structure from molfile</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectFactory.GetStructureFromMolfile(System.String,System.String)">
            <summary>
            generates a structure from molfile with the id
            </summary>
            <param name="id">an id</param>
            <param name="molfile">a molfile</param>
            <returns>the structure from molfile with the id</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectFactory.GetNoStructure">
            <summary>
            creates a NoStructure
            </summary>
            <returns>a NoStructure</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectFactory.GetReactionFromRxnFile(System.String)">
            <summary>
            creates a reaction from rxnfile
            </summary>
            <param name="rxnFile">a rxn file </param>
            <returns>a reaction from rxnfile</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectFactory.GetReactionFromRxnFile(System.String,System.String)">
            <summary>
            creates a reaction from rxnfile with the id
            </summary>
            <param name="id">an id</param>
            <param name="rxnFile">a rxn file</param>
            <returns>a reaction from rxnfile with the id</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectFactory.GetIChemObjectFromClipboard">
            <summary>
            creates a reaction or structure from clipboard.
            </summary>
            <returns>a reaction or structure from clipboard or null if clipboard does not contain an approbiate object.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectFactory.GetNormalizedChemObject(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject,BBS.ST.IVY.Chemistry.Util.DisplayPreferences)">
            <summary>
            provides an IChemObject that is normalized with respect to the provided DisplayPreferences
            For now this simply means scaling the coordinates to the standard bondlength given within preferences
            </summary>
            <param name="chemObject">the ChemObject to normalize</param>
            <param name="preferences">the desired DisplayPreferences</param>
            <returns>the normalized ChemObject</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException"><c>InvalidObjectException</c> thrown when the IChemObject is not a valid type.</exception>
            <exception cref="T:System.ArgumentNullException"><c>InvalidObjectException</c> thrown when the DisplayPreferences parameter is null.</exception>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList">
            <summary>
            The ChemObjectList is the container class for arbitrary ChemObjects.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectList.#ctor">
            <summary>
            returns an empty ChemObjectList
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectList.SearchForId(System.String)">
            <summary>
            Returns the matching index for the given Id.
            </summary>
            <param name="id">a list Id for which the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> should be returned</param>
            <returns>the index of the Element or -1 if not in the List</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectList.Add(System.String,BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject)">
            <summary>
            adds an <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> with a given ID to the list
            </summary>
            <param name="id">the ID</param>
            <param name="chemObject">the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> to add</param>
            <returns>the <see cref="T:System.Collections.ArrayList"/> index at which the value has been added.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectList.RemoveAt(System.Int32)">
            <summary>
            removes the <see cref="T:System.Collections.IList"/> item at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectList.Insert(System.Int32,System.Object)">
            <summary>
            inserts an item to the <see cref="T:System.Collections.IList"/> at the specified position
            </summary>
            <param name="index"></param>
            <param name="chemObject"></param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">thrown when the object does not implement the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> interface</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectList.Remove(System.Object)">
            <summary>
            removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"/>
            </summary>
            <param name="chemObject"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectList.Contains(System.Object)">
            <summary>
            determines whether the <see cref="T:System.Collections.IList"/> contains a specific value
            </summary>
            <param name="chemObject"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectList.Clear">
            <summary>
            removes all items from the <see cref="T:System.Collections.IList"/>
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectList.IndexOf(System.Object)">
            <summary>
            determines the index of a specific item in the <see cref="T:System.Collections.IList"/>
            </summary>
            <param name="chemObject"></param>
            <returns>the index of the object</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectList.Add(System.Object)">
            <summary>
            adds an item to the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="chemObject"></param>
            <returns>the index of the added object</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException"><paramref name="chemObject"/> doesn't implement the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> interface.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectList.CopyTo(System.Array,System.Int32)">
            <summary>
            copies the elements of the <see cref="T:System.Collections.ICollection"/> to an Array, starting at a particular Array index
            </summary>
            <param name="destinationArray">the one-dimensional Array that is the destination of the elements copied from the current Array</param>
            <param name="index">a 32-bit integer that represents the index in array at which copying begins</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ChemObjectList.GetEnumerator">
            <summary>
            returns an enumerator that can iterate through a collection
            </summary>
            <returns></returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.ChemObjectList.IsReadOnly">
            <summary>
            gets a value indicating whether the <see cref="T:System.Collections.IList"/> is read-only.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.ChemObjectList.Item(System.Int32)">
            <summary>
            gets or sets the element at the specified index
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">thrown when the object does not implement the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> interface</exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.ChemObjectList.IsFixedSize">
            <summary>
            gets a value indicating whether the <see cref="T:System.Collections.IList"/> has a fixed size
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.ChemObjectList.IsSynchronized">
            <summary>
            gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.ChemObjectList.Count">
            <summary>
            gets the number of elements contained in the <see cref="T:System.Collections.ICollection"/>
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.ChemObjectList.SyncRoot">
            <summary>
            gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.ChimeStringType">
            <summary>
            Summary description for ChimeStringType.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ChimeStringType.Molecule">
            <summary>
            a molecule chime string
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ChimeStringType.Reaction">
            <summary>
            a reaction chime string
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.DatabaseTable">
            <summary>
            
            This class represents a database table.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.DatabaseTable.#ctor(System.String,System.String)">
            <summary>
            default constructor
            </summary>
            <param name="owner">the table owner</param>
            <param name="name">the table name</param>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.DatabaseTable.TableOwner">
            <summary>
            returns the table owner
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.DatabaseTable.TableName">
            <summary>
            returns the table name
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.DatabaseTable.FullName">
            <summary>
            returns the full table name, i.e. owner.name
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.IReactionDatabaseConfiguration">
            <summary>
            Interface IReactionDatabaseConfiguration.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IReactionDatabaseConfiguration.ReactionTable">
            <summary>
            the reaction table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IReactionDatabaseConfiguration.ReactionColumn">
            <summary>
            the column name of the reaction
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IReactionDatabaseConfiguration.ReactionMol">
            <summary>
            the molecules of the reaction
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IReactionDatabaseConfiguration.MolXRef">
            <summary>
            the molecule cross reference
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IReactionDatabaseConfiguration.KeyColumn">
            <summary>
            the name of the active key field
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IReactionDatabaseConfiguration.KeyColumnDataType">
            <summary>
            the data type of the active key field
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IReactionDatabaseConfiguration.ConfigurationXml">
            <summary>
            the XML configuration
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IReactionDatabaseConfiguration.ConfigurationName">
            <summary>
            the name of the configuration
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.ISqlExecutor">
            <summary>
            This interface describes the common interface for all supported database connections.
            So we are able to support different types of database connections.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.GetStructures(System.Collections.IList,BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            Get a list of highlighted structures by IDs.
            </summary>
            <remarks>
            WARNING: some implementations _may_ issue implicit commits or alter the session otherwise.
            However, they should not.
            </remarks>
            <param name="idList">a list of IDs to get as ChemObjects</param>
            <param name="highlightInfo">a structure containing information about highlighting</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> containing the result</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.GetStructures(System.Collections.IList)">
            <summary>
            Get a list of structures by IDs.
            </summary>
            <remarks>
            WARNING: some implementations _may_ issue implicit commits or alter the session otherwise.
            However, they should not.
            </remarks>
            <param name="idList">a list of IDs to get as ChemObjects</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> containing the result</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.GetStructure(System.String)">
            <summary>
            Get a structure by ID.
            </summary>
            <remarks>
            WARNING: some implementations _may_ issue implicit commits or alter the session otherwise.
            However, they should not.
            </remarks>
            <param name="id">ID of the Structure to get</param>
            <returns>a Structure</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.GetStructureCartridgeErrors">
            <summary>
            reads the error stack of the molecules cartridge
            </summary>
            <returns>a string containing everything in the cartridge's error stack</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.GetReactionCartridgeErrors">
            <summary>
            reads the error stack of the reaction cartridge
            </summary>
            <returns>a string containing everything in the cartridge's error stack</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.InsertStructures(BBS.ST.IVY.Chemistry.Core.ChemObjectList)">
            <summary>
            Insert a list of structures
            </summary>
            <remarks>
            WARNING: some implementations _may_ issue implicit commits or alter the session otherwise.
            However, they should not.
            </remarks>
            <param name="structureList">a list containing the Structures to insert</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.InsertStructure(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            Insert a single structure.
            </summary>
            <remarks>
            WARNING: some implementations _may_ issue implicit commits or alter the session otherwise.
            However, they should not.
            </remarks>
            <param name="structure">the Structure to insert</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.UpdateStructures(BBS.ST.IVY.Chemistry.Core.ChemObjectList)">
            <summary>
            Update a list of structures with IDs.
            </summary>
            <remarks>
            WARNING: some implementations _may_ issue implicit commits or alter the session otherwise.
            However, they should not.
            </remarks>
            <param name="structureList">a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> containing the Structures to update</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.UpdateStructure(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            Update a single structure.
            </summary>
            <remarks>
            WARNING: some implementations _may_ issue implicit commits or alter the session otherwise.
            However, they should not.
            </remarks>
            <param name="structure">the Structure to update</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.DeleteStructures(System.Collections.IList)">
            <summary>
            Delete a list of structures by ID
            </summary>
            <remarks>
            WARNING: some implementations _may_ issue implicit commits or alter the session otherwise.
            However, they should not.
            </remarks>
            <param name="idList">a list of IDs to delete from the database</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.DeleteStructure(System.String)">
            <summary>
            Delete a single structure by ID.
            </summary>
            <remarks>
            WARNING: some implementations _may_ issue implicit commits or alter the session otherwise.
            However, they should not.
            </remarks>
            <param name="id">the ID of the Structure to delete</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.InsertReactions(BBS.ST.IVY.Chemistry.Core.ChemObjectList)">
            <summary>
            Insert a list of reactions with IDs.
            </summary>
            <param name="reactionList">a list of Reactions to insert in the database</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.InsertReaction(BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction)">
            <summary>
            Insert a list of reactions with IDs.
            </summary>
            <param name="reaction">the Reaction to insert in the database</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.UpdateReactions(BBS.ST.IVY.Chemistry.Core.ChemObjectList)">
            <summary>
            Update a list of reactions with IDs.
            </summary>
            <param name="reactionList">a list of Reactions to update in the database</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.UpdateReaction(BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction)">
            <summary>
            Update a single reaction.
            </summary>
            <param name="reaction">the Reaction to update in the database</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.GetReactions(System.Collections.IList,BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction)">
            <summary>
            Get a list of highlighted reactions by IDs.
            </summary>
            <remarks>
            WARNING: some implementations _may_ issue implicit commits or alter the session otherwise.
            However, they should not.
            </remarks>
            <param name="idList">a list of IDs to get as ChemObjects</param>
            <param name="highlightInfo">a reaction containing information about highlighting</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> containing the result or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">An invalid Rxn file was used.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.GetReactions(System.Collections.IList)">
            <summary>
            Get a list of reactions by IDs.
            </summary>
            <param name="idList">a list of IDs to get as ChemObjects</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> containing the result or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">An invalid Rxn file was used.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.GetReaction(System.String)">
            <summary>
            Get a reaction by ID.
            </summary>
            <remarks>
            WARNING: some implementations _may_ issue implicit commits or alter the session otherwise.
            However, they should not.
            </remarks>
            <param name="id">ID of the reaction to get</param>
            <returns>a Reaction object containing a reaction or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't re<c>ChemObject</c>mObject from the database.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">An invalid Rxn file was used.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.DeleteReactions(System.Collections.IList)">
            <summary>
            Delete a list of reactions by ID
            </summary>
            <param name="idList">a list of IDs to delete from the database</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.DeleteReaction(System.String)">
            <summary>
            Delete a reaction by ID
            </summary>
            <param name="id">the ID of the reaction to delete from the database</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.GetInitializedStructureDbConnection">
            <summary>
            Get the currently used database connection and makes sure the structure cartridge is initialized for that connection.
            </summary>
            <returns>the initialized Connection as an object. You have to cast this to the correct type</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ISqlExecutor.GetInitializedReactionDbConnection">
            <summary>
            Get the currently used database connection and makes sure the reaction cartridge is initialized for that connection.
            </summary>
            <returns>the initialized Connection as an object. You have to cast this to the correct type</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.IStructureDatabaseConfiguration">
            <summary>
            Interface IStructureDatabaseConfiguration.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IStructureDatabaseConfiguration.ConfigurationName">
            <summary>
            the name of the configuration
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IStructureDatabaseConfiguration.KeyColumnDataType">
            <summary>
            the data type of the active key field
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IStructureDatabaseConfiguration.ConfigurationXml">
            <summary>
            the XML configuration
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IStructureDatabaseConfiguration.MolweightColumn">
            <summary>
            the column name of the molweight (optional)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IStructureDatabaseConfiguration.MolformulaColumn">
            <summary>
            the column name of the molformula (optional)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IStructureDatabaseConfiguration.StructureColumn">
            <summary>
            the column name of the chemistry
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IStructureDatabaseConfiguration.StructureTable">
            <summary>
            the structure table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IStructureDatabaseConfiguration.StructureUpdateTable">
            <summary>
            the structure update table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IStructureDatabaseConfiguration.DictionaryTable">
            <summary>
            the dictionary table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.IStructureDatabaseConfiguration.KeyColumn">
            <summary>
            the active key field id
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.MolXRef">
            <summary>
            This class represents a cross reference table of molecules for reactions.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.MolXRef.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.MolXRef.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,BBS.ST.IVY.Chemistry.Core.RoleList)">
            <summary>
            the constructor of MolXRef
            </summary>
            <param name="tableOwner">the owner of the cross reference table</param>
            <param name="tableName">the name of the cross reference table</param>
            <param name="rxnIdField">the RxnId field of the cross reference table</param>
            <param name="rxnIdReferenceField">the ID field referenced by <paramref name="rxnIdField"/> as a foreign key</param>
            <param name="molIdField">the MolId field of the cross reference table</param>
            <param name="molIdReferenceField">the ID field referenced by <paramref name="molIdField"/> as a foreign key</param>
            <param name="indexField">the index field of the cross reference table</param>
            <param name="roleList">the role list of the cross reference table</param>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.MolXRef.RoleList">
            <summary>
            the role list of the cross reference table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.MolXRef.TableOwner">
            <summary>
            the owner of the cross reference table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.MolXRef.TableName">
            <summary>
            the name of the cross reference table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.MolXRef.RxnIdField">
            <summary>
            the RxnId field of the cross reference table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.MolXRef.RxnIdReferenceField">
            <summary>
            the ID field referenced by <see cref="P:BBS.ST.IVY.Chemistry.Core.MolXRef.RxnIdField"/> as a foreign key
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.MolXRef.MolIdField">
            <summary>
            the MolId field of the cross reference table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.MolXRef.MolIdReferenceField">
            <summary>
            the ID field referenced by <see cref="P:BBS.ST.IVY.Chemistry.Core.MolXRef.MolIdField"/> as a foreign key
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.MolXRef.IndexField">
            <summary>
            the index field of the cross reference table
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor">
            <summary>
            an implementation of a SqlExecutor based on a normal ODP.NET connection.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.#ctor(Oracle.DataAccess.Client.OracleConnection,BBS.ST.IVY.Chemistry.Core.CartridgeContext)">
            <summary>
            The constructor for the Oracle Data Provider specific SqlExecutor
            </summary>
            <remarks>
            This constructor needs not be directly used by an application developer.
            If you use <see cref="M:BBS.ST.IVY.Chemistry.Core.CartridgeContext.GetStructureBroker(System.Object)"/>,
            you will get a ready-to-use broker class for all chemical database purposes. 
            </remarks>
            <param name="connection">a valid database connection</param>
            <param name="cartridgeContext">a valid cartridge context</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.InitReactionCartridge">
            <summary>
            Initializes the cartridge for the current connection. 
            If you use the same connection throughout the application, this has to be done only once. 
            If you use a connection pool, call this method every time to be safe.
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.InitStructureCartridge">
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.CallCtenvinit(System.String)">
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.SwitchToAmericanNumerics">
            <summary>
            switch the current session's NLS_NUMERIC_CHARACTERS setting to American
            </summary>
            <remarks>
            MDLs cartridges 2.0 gave an error whenever there was an attempt to insert / update
            and the NLS_NUMERIC_CHARACTERS setting was not American.
            Make sure you call <see cref="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.SwitchBackToOriginalNumerics"/> when finished inserting/updating
            to re-set the current oracle connection to its previous state! 
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.GetStructures(System.Collections.IList,BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            Get a list of structures for a list of ids with highlighting information. 
            If you want multiple structures for one id, use this method with an id-list containing only one id.
            </summary>
            <param name="idList">a list with the ids of the desired structures</param>
            <param name="highlightInfo">the substructure to be highlighted</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> containing the result or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.GetStructures(System.Collections.IList)">
            <summary>
            Get a list of structures for list of ids. 
            If you want multiple structures for one id, use this method with an id-list containing only one id.
            </summary>
            <param name="idList"></param>
            <returns>A <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> containing the result or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.GetStructure(System.String)">
            <summary>
            Get a single structure for a single id. If more than one structure is found, only the first is returned!
            </summary>
            <param name="id">the id of a structure to find</param>
            <returns>a Structure object containing a structure or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.GetInitializedStructureDbConnection">
            <summary>
            Get the currently used database connection and makes sure the structure cartridge is initialized for that connection.
            </summary>
            <returns>the initialized Connection as an object. You have to cast this to the correct type</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.GetInitializedReactionDbConnection">
            <summary>
            Get the currently used database connection and makes sure the reaction cartridge is initialized for that connection.
            </summary>
            <returns>the initialized Connection as an object. You have to cast this to the correct type</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.GetStructureCartridgeErrors">
            <summary>
            Get pending molecules cartridge errors
            </summary>
            <returns>a String with the errors (empty String if there were no errors)</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.GetReactionCartridgeErrors">
            <summary>
            Get pending reaction cartridge errors
            </summary>
            <returns>a String with the errors (empty String if there were no errors)</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.InsertStructures(BBS.ST.IVY.Chemistry.Core.ChemObjectList)">
            <summary>
            Insert new structures into the database
            </summary>
            <remarks>
            If a Structure has an ID, that ID will be inserted as well, unless the key column is read only
            (in which case an exception will be thrown).
            If a Structure has no ID, its value will be inserted, trusting that the ID will be auto generated in the DB. 
            </remarks>
            <param name="structureList">a list containing the Structures to insert</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.InsertStructure(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            Insert a single structure.
            </summary>
            <remarks>
            WARNING: some implementations _may_ issue implicit commits or alter the session otherwise.
            However, they should not.
            </remarks>
            <param name="structure">the Structure to insert</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.UpdateStructures(BBS.ST.IVY.Chemistry.Core.ChemObjectList)">
            <summary>
            Update structures in the database
            </summary>
            <param name="structureList">a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> containing the Structures to update</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.UpdateStructure(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            Update a single structure.
            </summary>
            <remarks>
            WARNING: some implementations _may_ issue implicit commits or alter the session otherwise.
            However, they should not.
            </remarks>
            <param name="structure">the Structure to update</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.DeleteStructures(System.Collections.IList)">
            <summary>
            Delete a list of structures by ID
            </summary>
            <param name="idList">a list of IDs to delete from the database</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.DeleteStructure(System.String)">
            <summary>
            Delete a single structure by ID.
            </summary>
            <remarks>
            WARNING: some implementations _may_ issue implicit commits or alter the session otherwise.
            However, they should not.
            </remarks>
            <param name="id">the ID of the Structure to delete</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.InsertReactions(BBS.ST.IVY.Chemistry.Core.ChemObjectList)">
            <summary>
            insert new reactions into the database
            </summary>
            <param name="reactionList">a list of Reactions to insert in the database</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.InsertReaction(BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction)">
            <summary>
            Insert a list of reactions with IDs.
            </summary>
            <param name="reaction">the Reaction to insert in the database</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.UpdateReactions(BBS.ST.IVY.Chemistry.Core.ChemObjectList)">
            <summary>
            update reactions in the database
            </summary>
            <param name="reactionList">a list of Reactions to update in the database</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.UpdateReaction(BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction)">
            <summary>
            Update a single reaction.
            </summary>
            <param name="reaction">the Reaction to update in the database</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.GetReactions(System.Collections.IList,BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction)">
            <summary>
            Get a list of reactions for a list of ids with highlighting information. 
            If you want multiple reactions for one id, use this method with an id-list containing only one id.
            At this time nothing will be returned, because the <paramref name="highlightInfo"/> is only supported in V3000 rxn files.
            </summary>
            <param name="idList">a list with the ids of the desired reactions</param>
            <param name="highlightInfo">the substructure to be highlighted</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> containing the result or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">An invalid Rxn file was used.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.GetReactions(System.Collections.IList)">
            <summary>
            Get a list of reactions for a list of ids. 
            </summary>
            <param name="idList"></param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> containing the result or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">An invalid Rxn file was used.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.GetReaction(System.String)">
            <summary>
            Get a single reaction for a single id. If more than one reaction is found, only the first is returned!
            </summary>
            <param name="id">the id of a reaction to find</param>
            <returns>a Reaction object containing a reaction or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't re<c>ChemObject</c>mObject from the database.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">An invalid Rxn file was used.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.DeleteReactions(System.Collections.IList)">
            <summary>
            Delete a list of reactions by ID
            </summary>
            <param name="idList">a list of IDs to delete from the database</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.OdpBasedSqlExecutor.DeleteReaction(System.String)">
            <summary>
            Delete a reaction by ID
            </summary>
            <param name="id">the ID of the reaction to delete from the database</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.PrepareSqlInStatement">
            <summary>
            this class creates IN parts for SQL statements
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.PrepareSqlInStatement.GetInPartsForSql(System.Collections.IList,System.Boolean)">
            <summary>
            this method returns a list of strings, representing the IN parts of a SQL statement;
            it's necessary because of a limit of 1024 entries in the IN part
            </summary>
            <param name="list">a list of values for the IN part</param>
            <param name="areCharacters">true if the type of the values is character based</param>
            <returns>a list of strings, representing the IN parts in SQL</returns>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.QueryBuilder">
            <summary>
            Responsibilities:
              - collect the different (<c>ChemObject</c> specific) search criteria for a single search request
              - provides a cartridge independent interface for this specification
              - creates different sql query parts (it's up to the application to construct the (optimized) query)
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.QueryBuilder.#ctor(BBS.ST.IVY.Chemistry.Core.CartridgeContext)">
            <summary>
            Constructs a new QueryBuilder with a given <see cref="T:BBS.ST.IVY.Chemistry.Core.CartridgeContext"/>
            </summary>
            <param name="cartridgeContext">the <see cref="T:BBS.ST.IVY.Chemistry.Core.CartridgeContext"/> the QueryBuilder gets its information about the Database from</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.QueryBuilder.GetMolFileOperator(System.String)">
            <summary>
            Get the cartridge specific operator to get mol files from the database
            </summary>
            <param name="molField">the name of the mol field column</param>
            <returns>the mol file operator</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.QueryBuilder.GetChimeStringOperator(System.String,BBS.ST.IVY.Chemistry.Core.ChimeStringType)">
            <summary>
            Get the cartridge specific operator to get chime strings from the database
            </summary>
            <param name="field">the name of the mol or reaction field column</param>
            <param name="chimeStringType">the type of the chime string</param>
            <returns>the chime string operator</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.QueryBuilder.GetRxnFileOperator(System.String)">
            <summary>
            Get the cartridge specific operator to get rxn files from the database
            </summary>
            <param name="rxnField">the name of the rxn field column</param>
            <returns>the rxn file operator</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.QueryBuilder.GetStructureWherePart(BBS.ST.IVY.Chemistry.Core.StructureSearchModes)">
            <summary>
            Get a SQL fragment to be used in the WHERE part of a prepared query.
            </summary>
            <param name="searchMode"></param>
            <returns>cartridge specific SQL for the WHERE clause</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.QueryBuilder.GetReactionWherePart(BBS.ST.IVY.Chemistry.Core.ReactionSearchModes)">
            <summary>
            Get a SQL fragment to be used in the WHERE part of a prepared query.
            </summary>
            <param name="searchMode">the requested search mode</param>
            <returns>a reaction where part object, representing the where part, and the depending tables</returns>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.ReactionBroker">
            <summary>
            Responsibilities:
             - read a list of Reactions from the Database
             - writes a new Reaction to the database
             - writes changes of a Reaction to the database
             - removes a Reaction from the database
             - provides access to the cartridge-internal error stack
            </summary>
            <remarks>
            The additional function GetInitializedConnection is also placed within this class
            because this is the position where you have all information you need to do that,
            i.e. database connection, cartridge context, and sql executor implementation are known.  
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ReactionBroker.#ctor(BBS.ST.IVY.Chemistry.Core.ISqlExecutor)">
            <summary>
            the default constructor of ReactionBroker
            </summary>
            <remarks>
            This constructor is used by the method <see cref="M:BBS.ST.IVY.Chemistry.Core.CartridgeContext.GetStructureBroker(System.Object)"/>
            to obtain an instance of ReactionBroker. 
            </remarks>
            <param name="sqlExecutor"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ReactionBroker.GetInitializedConnection">
            <summary>
            Get the currently used database connection and makes sure the cartridge is initialized for that connection.
            </summary>
            <returns>the initialized Connection as an object. You have to cast this to the correct type</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ReactionBroker.GetCartridgeErrors">
            <summary>
            Get pending cartridge errors
            </summary>
            <returns>a String with the errors (empty String if there were no errors)</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ReactionBroker.InsertReactions(BBS.ST.IVY.Chemistry.Core.ChemObjectList)">
            <summary>
            Insert new reactions into the database
            </summary>
            <param name="chemObjectList">a list of Reactions to insert</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ReactionBroker.UpdateReactions(BBS.ST.IVY.Chemistry.Core.ChemObjectList)">
            <summary>
            Update reactions in the database
            </summary>
            <param name="chemObjectList">a list of Reactions to update</param>
            <remarks>
            The update is performed in the following way:
            the database record for each Reaction in the list is located using the Reaction's ID,
            and its reaction value is updated with the Reaction's value 
            </remarks>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ReactionBroker.GetReactions(System.Collections.IList,BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction)">
            <summary>
            Get a list of reactions for list of ids with highlighting information. 
            If you want multiple reactions for one id, use this method with an id-list containing only one id.
            </summary>
            <param name="idList">a list of ids</param>
            <param name="highlightInfo">the information to highlight</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> containing the result or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">An invalid Rxn file was used.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ReactionBroker.GetReactions(System.Collections.IList)">
            <summary>
            Get a list of reactions for list of ids.
            </summary>
            <param name="idList">a list of ids</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> containing the result or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">An invalid Rxn file was used.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ReactionBroker.GetReaction(System.String)">
            <summary>
            Get a single reaction for a single id. If more than one reaction is found, only the first is returned!
            </summary>
            <param name="id">the id of a reaction</param>
            <returns>a Reaction or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't re<c>ChemObject</c>mObject from the database.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">An invalid Rxn file was used.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ReactionBroker.DeleteReactions(System.Collections.IList)">
            <summary>
            Delete a list of reactions by ID
            </summary>
            <param name="idList">a list of ids to delete</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.ReactionMol">
            <summary>
            Summary description for ReactionMol.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ReactionMol.#ctor">
            <summary>
            the default constructor of ReactionMol
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ReactionMol.#ctor(BBS.ST.IVY.Chemistry.Core.DatabaseTable,BBS.ST.IVY.Chemistry.Core.DatabaseTable,System.String,System.String)">
            <summary>
            the constructor of ReactionMol
            </summary>
            <param name="dictionaryTable">the dictionary table</param>
            <param name="structureTable">the molecule table</param>
            <param name="structureId">the structure id in the molecule table</param>
            <param name="structureColumn">the structure column in the molecule table</param>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.ReactionMol.DictionaryTable">
            <summary>
            the name of the dictionary table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.ReactionMol.StructureTable">
            <summary>
            the table name of the molecule table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.ReactionMol.StructureId">
            <summary>
            the structure id in the molecule table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.ReactionMol.StructureColumn">
            <summary>
            the structure column in the molecule table
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes">
            <summary>
            Enumeration of all reaction search modes.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes.ExactMatch">
            <summary>
            Provides the most restrictive matching of reactional features.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes.ReactionSubstructure">
            <summary>
            Finds reactions that contain the reaction substructure that you specify in the query. A reaction
            substructure is a portion of a reaction with your choice of atom and bond query features,
            mapped atoms, and restrictions on the reacting centers.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes.ProductNotReactant">
            <summary>
            Finds reactions that contain the molecule as a product and not as a reactant.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes.ReactantNotProduct">
            <summary>
            Finds reactions that contain the molecule as a reactant and not as a product.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes.AnyStructure">
            <summary>
            Finds reactions that contain the molecule as a product or as a reactant.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes.ProductNotReactantSubstructure">
            <summary>
            Finds reactions that contain the substructure as a product and not as a reactant.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes.ReactantNotProductSubstructure">
            <summary>
            Finds reactions that contain the substructure as a reactant and not as a product.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes.AnyStructureSubstructure">
            <summary>
            Finds reactions that contain the substructure as a product or as a reactant.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes.FirstProduct">
            <summary>
            Finds reactions that contain the molecule as their FIRST product (i.e. as "target structure")
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes.FirstProductSubstructure">
            <summary>
            Finds reactions that contain the molecule as their FIRST product (i.e. as "target structure")
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes.Product">
            <summary>
            Finds reactions that contain the molecule as a product (regardless of the reactant side)
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes.ProductSubstructure">
            <summary>
            Finds reactions that contain the substructure as a product (regardless of the reactant side)
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes.Reactant">
            <summary>
            Finds reactions that contain the molecule as a reactant (regardless of the product side)
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.ReactionSearchModes.ReactantSubstructure">
            <summary>
            Finds reactions that contain the substructure as a reactant (regardless of the product side)
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.ReactionWherePart">
            <summary>
            This class represents the where part, including depending tables.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.ReactionWherePart.#ctor(System.String,System.Collections.ArrayList)">
            <summary>
            the constructor of a ReactionWherePart object
            </summary>
            <param name="wherePart">the where part of the chemical reaction search</param>
            <param name="dependingTableList">the list of the depending tables</param>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.ReactionWherePart.WherePart">
            <summary>
            the where part of the chemical reaction search
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.ReactionWherePart.DependingTableList">
            <summary>
            a list of depending tables
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.ReactionWherePart.DependingTableNames">
            <summary>
            convenience property that returns a string
            containing the comma separated list of the names of all depending tables
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.Role">
            <summary>
            This class represents the role of molecules in the reaction database configuration.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.Role.#ctor(System.String,System.String)">
            <summary>
            the constructor of Role
            </summary>
            <param name="name">the name of the role</param>
            <param name="condition">the condition to be searched in the cross reference table</param>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Role.Name">
            <summary>
            the name of the role
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.Role.Condition">
            <summary>
            the condition to be searched in the cross reference table
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.RoleList">
            <summary>
            This class represents the list of the roles.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.RoleList.#ctor">
            <summary>
            the default constructor of RoleList
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.RoleList.Add(BBS.ST.IVY.Chemistry.Core.Role)">
            <summary>
            adds a role to the list
            </summary>
            <param name="role"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.RoleList.GetRole(System.String)">
            <summary>
            this function returns the role for the requested role name
            </summary>
            <param name="role"></param>
            <returns>the cross reference table</returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.RoleList.Length">
            <summary>
            returns the number of items
            </summary>
            <returns></returns>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.StructureBroker">
            <summary>
            Responsibilities:
             - read a list of Structures from the Database
             - writes a new Structure to the database
             - writes changes of a Structure to the database
             - removes a Structure from the database
             - provides access to the cartridge-internal error stack
            </summary>
            <remarks>
            The additional function GetInitializedConnection is also placed within this class
            because this is the position where you have all information you need to do that,
            i.e. database connection, cartridge context, and sql executor implementation are known.  
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.StructureBroker.#ctor(BBS.ST.IVY.Chemistry.Core.ISqlExecutor)">
            <summary>
            the default constructor of StructureBroker
            </summary>
            <remarks>
            This constructor is used by the method <see cref="M:BBS.ST.IVY.Chemistry.Core.CartridgeContext.GetStructureBroker(System.Object)"/>
            to obtain an instance of StructureBroker. 
            </remarks>
            <param name="sqlExecutor"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.StructureBroker.GetInitializedConnection">
            <summary>
            Get the currently used database connection and makes sure the cartridge is initialized for that connection.
            </summary>
            <returns>the initialized Connection as an object. You have to cast this to the correct type</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.StructureBroker.GetCartridgeErrors">
            <summary>
            Get pending cartridge errors
            </summary>
            <returns>a String with the errors (empty String if there were no errors)</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.StructureBroker.GetStructures(System.Collections.IList,BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            Get a list of structures for list of ids with highlighting information. 
            If you want multiple structures for one id, use this method with an id-list containing only one id.
            </summary>
            <param name="idList">a list of Ids</param>
            <param name="highlightInfo">the information to highlight</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> containing the result or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.StructureBroker.GetStructures(System.Collections.IList)">
            <summary>
            Get a list of structures for list of ids. If you want multiple structures for one id, 
            use this method with an id-list containing only one id.
            </summary>
            <param name="idList">a list of Ids</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Core.ChemObjectList"/> containing the result or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.StructureBroker.GetStructure(System.String)">
            <summary>
            Get a single structure for a single id. If more than one structure is found, only the first is returned!
            </summary>
            <param name="id">the id of a structure to find</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.Structure"/> containing a structure or null</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">Can't read the <c>ChemObject</c> from the database</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">Can't find a <c>ChemObject</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.StructureBroker.InsertStructures(BBS.ST.IVY.Chemistry.Core.ChemObjectList)">
            <summary>
            Insert new structures into the database
            </summary>
            <param name="chemObjectList">a list of Structures to insert</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.StructureBroker.UpdateStructures(BBS.ST.IVY.Chemistry.Core.ChemObjectList)">
            <summary>
            Update structures in the database
            </summary>
            <param name="chemObjectList">a list of Structures to update</param>
            <remarks>
            The update is performed in the following way:
            the database record for each Structure in the list is located using the Structure's ID,
            and its structure value is updated with the Structure's value 
            </remarks>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.StructureBroker.DeleteStructures(System.Collections.IList)">
            <summary>
            Delete a list of structures by ID
            </summary>
            <param name="idList">a list of Ids</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">Executing sql fails.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">Cartridge could not be initialized, because either the connection is not open or there is no valid configuration.</exception>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.StructureSearchModes">
            <summary>
            Enumeration of all structure search modes.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.StructureSearchModes.None">
            <summary>
            Provides the least restrictive matching of structural features. It matches based 
            only on atom types, bond connectivity, and HCR (a range defined by the number of 
            hydrogens plus or minus the absolute charge and radical values).
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.StructureSearchModes.ExactMatch">
            <summary>
            Provides the most restrictive matching of structural features.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.StructureSearchModes.Substructure">
            <summary>
            A substructure search finds structures that contain your query as a substructure
            within a larger structure. A substructure is a portion of a larger molecular structure.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.StructureSearchModes.Isomer">
            <summary>
            Provides an isomer search.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.StructureSearchModes.Tautomer">
            <summary>
            Provides a tautomer search.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Core.StructureSearchModes.Similarity">
            <summary>
            A similarity search finds structures that are structurally similar to the structure in your
            query, and returns the degree of similarity between the query and retrieved structures. To 
            perform a similarity search, use the molsim operator. The molsim operator returns a number 
            between 0 and 100 that indicates the degree of similarity between the query structure and 
            the retrieved structure. The higher the value, the more similarity. The degree of structural 
            similarity depends on the number of searchable keys that a stored structure has in common 
            with the query, compared to the total number of searchable keys (MDL sets approximately 960 
            searchable keys in the database). A searchable key defines a specific structural feature, 
            such as a ring structure or the arrangement of a heteroatom in a molecule. In contrast to 
            the substructure search, which finds results that are precisely specified by a carefully 
            constructed query structure, similarity search finds a group of structures that are loosely 
            related to the query structure. 
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.XMLBasedReactionDatabaseConfiguration">
            <summary>
            This class reads the reaction xml configuration and represents its properties
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.XMLBasedReactionDatabaseConfiguration.#ctor(System.String)">
            <summary>
            constructor of the XML based configuration for a reaction db connection
            </summary>
            <param name="configXml">a string containing the XML configuration</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.XMLValidationException">thrown when the given XML does not match the XSD for this type of configuration</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.XMLBasedReactionDatabaseConfiguration.ReadAttributes(System.String)">
            <summary>
            reads the attributes from the xml string
            </summary>
            <param name="xmlString"></param>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedReactionDatabaseConfiguration.ReactionTable">
            <summary>
            the name of the reaction table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedReactionDatabaseConfiguration.ReactionColumn">
            <summary>
            the name of the reaction column
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedReactionDatabaseConfiguration.ReactionMol">
            <summary>
            the reaction molecules table description
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedReactionDatabaseConfiguration.MolXRef">
            <summary>
            the molecule cross reference
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedReactionDatabaseConfiguration.ConfigurationName">
            <summary>
            the name of the configuration
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedReactionDatabaseConfiguration.ConfigurationXml">
            <summary>
             the actual XML configuration
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedReactionDatabaseConfiguration.KeyColumn">
            <summary>
            the name of the active key field
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedReactionDatabaseConfiguration.KeyColumnDataType">
            <summary>
            the data type of the active key field
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Core.XMLBasedStructureDatabaseConfiguration">
            <summary>
            This class reads the structure xml configuration and represents its properties
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.XMLBasedStructureDatabaseConfiguration.#ctor(System.String)">
            <summary>
            constructor of the XML based configuration for a structure db connection
            </summary>
            <param name="configXml">a string containing the XML configuration</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.XMLValidationException">thrown when the given XML does not match the XSD for this type of configuration</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Core.XMLBasedStructureDatabaseConfiguration.ReadAttributes(System.String)">
            <summary>
            reads the attributes from the xml string
            </summary>
            <param name="xmlString"></param>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedStructureDatabaseConfiguration.ConfigurationName">
            <summary>
            the name of the configuration
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedStructureDatabaseConfiguration.KeyColumnDataType">
            <summary>
            the data type of the key column
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedStructureDatabaseConfiguration.MolweightColumn">
            <summary>
            the column name of the mol weight (optional)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedStructureDatabaseConfiguration.MolformulaColumn">
            <summary>
            the column name of the mol formula (optional)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedStructureDatabaseConfiguration.StructureColumn">
            <summary>
            the column name of the structure
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedStructureDatabaseConfiguration.StructureTable">
            <summary>
            the structure table 
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedStructureDatabaseConfiguration.StructureUpdateTable">
            <summary>
            the structure update table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedStructureDatabaseConfiguration.DictionaryTable">
            <summary>
            the dictionary table
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedStructureDatabaseConfiguration.ConfigurationXml">
            <summary>
            the actual XML configuration
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Core.XMLBasedStructureDatabaseConfiguration.KeyColumn">
            <summary>
            the key field column name
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Display.ContentType">
            <summary>
            content types of a <c>DisplayControl</c>
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.ContentType.Structure">
            <summary>
            a Structure.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.ContentType.Reaction">
            <summary>
            a Reaction.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.ContentType.Sketch">
            <summary>
            any kind of Sketch.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.ContentType.ReactionProducts">
            <summary>
            only products.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.ContentType.PseudoReaction">
            <summary>
            a reaction which first and only reactant is a no structure.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.ContentType.HalfReaction">
            <summary>
            a reaction arrow followed by 1 to n structures.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.ContentType.Nothing">
            <summary>
            no content.
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Display.DecompositionInfo">
            <summary>
            holds information about a decomposed sketch
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DecompositionInfo.CheckForHydrogenMolecule(System.String)">
            <summary>
            checks passed molfilestring for standalone Hydrogen molecules.
            </summary>
            <param name="pMolfileString"></param>
            <returns>true if containing at least one standalone hydrogen molecule, otherwise false.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DecompositionInfo.GetDecompositionInfo(MDL.Draw.Chemistry.Molecule,System.String,BBS.ST.IVY.Chemistry.Display.FieldType)">
            <summary>
            gets a <see cref="T:BBS.ST.IVY.Chemistry.Display.DecompositionInfo"/> instance for the passed molecule.
            </summary>
            <param name="pMolecule">the Molecule object in the renditor</param>
            <param name="pRenditorMolfileString">the content of the renditor's MolFileString property</param>
            <param name="pSupportedFieldType">the currently set FieldType of the DisplayControl</param>
            <returns></returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DecompositionInfo.ContentType">
            <summary>
            
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DecompositionInfo.ReactantCount">
            <summary>
            number of reactants (i.e. number of fragments before a reaction arrow chemobject).
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DecompositionInfo.ProductCount">
            <summary>
            number of products (i.e. number of fragments after a reaction arrow chemobject).
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DecompositionInfo.ChemObjects">
            <summary>
            
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DecompositionInfo.HasFragmentGroups">
            <summary>
            
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DecompositionInfo.ContainsHydrogenMolecule">
            <summary>
            
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DecompositionInfo.RenditorMolfileString">
            <summary>
            
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.DecompositionInfo.CompositionInfo.ReactantCount">
            <summary>
            number of reactants (i.e. number of fragments before a reaction arrow chemobject).
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.DecompositionInfo.CompositionInfo.ProductCount">
            <summary>
            number of products (i.e. number of fragments after a reaction arrow chemobject).
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.DecompositionInfo.CompositionInfo.IsPseudoReaction">
            <summary>
            the one and only reactant is a no structure and there is at least one product.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.DecompositionInfo.CompositionInfo.IsChemObjectFlowDisordered">
            <summary>
            the type of a chemobject is not one of the expected ones.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.DecompositionInfo.CompositionInfo.IsChemObjectFlowComplete">
            <summary>
            the last chemobject is a fragment.
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Display.ValidatorDecision">
            <summary>
            this enumeration contains the possible values for the decision
            a validator makes when handling the ValidatingUserInput event
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.ValidatorDecision.Ok">
            <summary>
            changes are o.k.; update the DisplayControl
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.ValidatorDecision.BackToEditor">
            <summary>
            
            go back to editor for further changes 
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.ValidatorDecision.DiscardChanges">
            <summary>
            discard changes and do not update the DisplayControl
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Display.ValidatingUserInputHandler">
            <summary>
            Represents the method that handles the <see cref="E:BBS.ST.IVY.Chemistry.Display.DisplayControl.ValidatingUserInput">ValidatingUserInput</see> event
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Display.ValidatingUserInputEventArgs">
            <summary>
            provides data for the <see cref="E:BBS.ST.IVY.Chemistry.Display.DisplayControl.ValidatingUserInput">ValidatingUserInput</see> event.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.ValidatingUserInputEventArgs.Decision">
            <summary>
            The decision an event consumer makes about the consequences of the validation.
            </summary>
            <remarks>
            The value of decision is set to <see cref="T:BBS.ST.IVY.Chemistry.Display.ValidatorDecision"/>.<c>Ok</c> by default.
            It is the responsibility of every event handler to check this decision for being anything
            other that <c>Ok</c> before explicitly setting it to <c>Ok</c> itself.
            Reason: if more than one handler has been registered for this event, some other event handler
            might have already set decision to DiscardChanges or BackToEditor and you might want to keep this veto!
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.ValidatingUserInputEventArgs.ChemObject">
            <summary>
            gets or sets the ChemObject associated with the event
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.ValidatingUserInputEventArgs.ContainsUnhandledSketchObjects">
            <summary>
            Returns true if the sketch contains objects that might get lost when translating to a MOL or RXN file.
            </summary>
            <remarks>
            If this is true, the sketch should probably be checked if it is a corrupt reaction (e.g. A + B -> + C)!
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.ValidatingUserInputEventArgs.SketchIsEmpty">
            <summary>
            Returns true if the incoming sketch is totally empty.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.ValidatingUserInputEventArgs.ContainsHydrogenMolecule">
            <summary>
            Returns true if the incoming sketch contains an explicit hydrogen molecule.
            </summary>
            <remarks>
            Explicit hydrogen molecules can not be registered into an MDL database.
            Other explicitly drawn hydrogen atoms are only registered if they are needed for
            specifying stereochemistry. 
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.ValidatingUserInputEventArgs.Molecule">
            <summary>
            Returns the "hidden" Molecule object of the internal renditor control.
            </summary>
            <remarks>Handle with extreme care - the implementation may be changed by Accelrys without notice!</remarks>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Display.ReadonlyAlertHandler">
            <summary>
            Represents the method that handles the <see cref="E:BBS.ST.IVY.Chemistry.Display.DisplayControl.ReadonlyAlert"><c>ReadonlyAlert</c></see> event
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Display.ReadonlyAlertEventArgs">
            <summary>
            provides data for the <see cref="E:BBS.ST.IVY.Chemistry.Display.DisplayControl.ReadonlyAlert">ReadonlyAlert</see> event.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.ReadonlyAlertEventArgs.ChemObject">
            <summary>
            gets the ChemObject associated with the event
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.ReadonlyAlertEventArgs.ContainsUnhandledSketchObjects">
            <summary>
            Returns true if the sketch contains objects that might get lost when translating to a MOL or RXN file.
            </summary>
            <remarks>
            If this is true, the sketch should probably be checked if it is a corrupt reaction (e.g. A + B -> + C)!
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.ReadonlyAlertEventArgs.SketchIsEmpty">
            <summary>
            Returns true if the incoming sketch is totally empty.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.ReadonlyAlertEventArgs.ContainsHydrogenMolecule">
            <summary>
            Returns true if the incoming sketch contains an explicit hydrogen molecule.
            </summary>
            <remarks>
            Explicit hydrogen molecules can not be registered into an MDL database.
            Other explicitly drawn hydrogen atoms are only registered if they are needed for
            specifying stereochemistry. 
            </remarks>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Display.DisplayControl">
            <summary>
            Summary description for DisplayControlMdlDraw.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.DisplayControl.mySketchType">
            <summary>
            flag for the <see cref="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.SketchType"/>
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.DisplayControl.myChemObject">
            <summary>
            the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> that is currently loaded into the <see cref="T:BBS.ST.IVY.Chemistry.Display.DisplayControl"/>
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.DisplayControl.myPreviousChemObject">
            <summary>
            the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> that was previously loaded into the <see cref="T:BBS.ST.IVY.Chemistry.Display.DisplayControl"/>
            </summary>
            <remarks>
            needed for simulating the DataFromStructureEdit event and the <see cref="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.AllowEdit"/> property;
            both are missing and/or dysfunctional in the MDL Draw <c>renditor</c>
            </remarks>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.DisplayControl.myDataChangedByProgram">
            <summary>
            Flag for indicating programmatic data change
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.DisplayControl.myFireEditorTimer">
            <summary>
            The timer that will trigger a delayed <see cref="F:BBS.ST.IVY.Chemistry.Display.DisplayControl.myInternalRenditor"/>.FireEditor() call
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.DisplayControl.myDisplayIsDirty">
            <summary>
            The flag that tells our timer to clean up and restore the display to its previous state
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.DisplayControl.myExpandAbbreviationsOnEdit">
            <summary>
            True if abbreviations should be expanded (and deleted) on an incoming sketch
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.DisplayControl.myEditing">
            <summary>
            True if the control has an editor window open.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.#ctor">
            <summary>
            default constructor
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException">
            Something is wrong with the MDL Direct installation, e.g. it is not installed at all,
            or the installed version does not meet the minimum requirements.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.CopyToClipBoard(System.String)">
            <summary>
            copies the passed molfile string to the clipboard.
            </summary>
            <param name="molfileString"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.LoadStructure(BBS.ST.IVY.Chemistry.Core.Chemistry.Structure)">
            <summary>
            Method to load a Structure into the display control
            </summary>
            <param name="structure">a BBS.ST.IVY.Chemistry.Core.Chemistry.Structure</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">
            Thrown when the current <see cref="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.SketchType"/> does not fit the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> type to be loaded.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.LoadReaction(BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction)">
            <summary>
            Method to load a Reaction into the display control
            </summary>
            <param name="reaction">a BBS.ST.IVY.Chemistry.Core.Chemistry.Reaction</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">
            Thrown when the current <see cref="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.SketchType"/> does not fit the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> type to be loaded.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.LoadChemObject(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject)">
            <summary>
            Method to load an object implementing <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> into the display control
            </summary>
            <param name="chemObject">an <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/></param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">
            Thrown when the current <see cref="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.SketchType"/> does not fit the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> type to be loaded.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.LoadAndValidate(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject)">
            <summary>
            Method to load an object implementing <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> into the display control
            </summary>
            <param name="chemObject">an <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/></param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">
            Thrown when the current <see cref="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.SketchType"/> does not fit the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> type to be loaded.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.GetChemObject">
            <summary>
            This method returns the loaded <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/>
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.LoadMolFile(System.String)">
            <summary>
            Method to load a single MDL Molfile from the file system into the display control
            </summary>
            <param name="filePath">absolute path of the MDL Molfile</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">
            Thrown when the current <see cref="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.SketchType"/> does not fit the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> type to be loaded.
            </exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolfileException">
            Thrown when an invalid Molfile is used.
            </exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.DisplayControlException">
            Thrown when the file content cannot be read from the given path.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.LoadRxnFile(System.String)">
            <summary>
            This method loads an MDL Rxn file from the file system
            </summary>
            <param name="filePath">path of the MDL Rxn file</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">
            Thrown when the current <see cref="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.SketchType"/> does not fit the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> type to be loaded.
            </exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">
            Thrown when an invalid Rxn file is used.
            </exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.DisplayControlException">
            Thrown when the file content cannot be read from the given path.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.LoadSketchFile(System.String)">
            <summary>
            Loads a Sketch file from the file system to the control.
            </summary>
            <param name="filePath">The pathname of the sketch file as a String.</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.LoadMolFileString(System.String,BBS.ST.IVY.Chemistry.Util.FileType)">
            <summary>
            This method loads an MDL file literal given as a string into the display control
            </summary>
            <param name="mdlFileString">a string containing the MDL file</param>
            <param name="fileType">the type of file contained in <paramref name="mdlFileString"/></param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">
            Thrown when the current <see cref="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.SketchType"/> does not fit the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> type to be loaded.
            </exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolfileException">
            Thrown when an invalid Molfile is used.
            </exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">
            Thrown when an invalid Rxn file is used.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.Clear">
            <summary>
            Clears the contents of the control
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.GetMolFileString">
            <summary>
            Returns the control's content as an MDL file.
            </summary>
            <returns>The MDL file as a String.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.WarmUp">
            <summary>
              EXPERIMENTAL:
              Inject auxThread into renditor to eliminate potential 
              race condition on editor creation.
            </summary>
            <remarks>
              Since all required renditor fields (auxInvoker, auxThread and auxSync) are private,
              access must be performed using reflection.
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.AdjustContextMenu">
            <summary>
            extends context menu with items allowing single molecule copy for reactions.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.SynchronizeChemObjectToDisplay">
            <summary>
            Loads the internal ChemObject representation to the Sketch in the display.
            Set this.myDataChangedByProgram to true before calling this method
            to avoid firing the DataChanged event and to bypass the InternalRenditor_StructureChanged event handling!
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.LoadChemObject(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject,System.Boolean,System.Boolean)">
            <summary>
            private overload that allows suppressing the <see cref="E:BBS.ST.IVY.Chemistry.Display.DisplayControl.DataChangedByProgram"/> event
            </summary>
            <param name="chemObject">the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> to be loaded</param>
            <param name="suppressDataChangedByProgram">if set to true, suppresses firing the <see cref="E:BBS.ST.IVY.Chemistry.Display.DisplayControl.DataChangedByProgram"/> event</param>
            <param name="isManualChange">Specifies whether change should be treated as programatic triggered (default: false) or as user driven 
            (should be cleaned and validated; true).</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">
            Thrown when the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> has an illegal type or a type does not match the current <see cref="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.SketchType"/> setting.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.LoadMolFileString(System.String,BBS.ST.IVY.Chemistry.Util.FileType,System.Boolean)">
            <summary>
            private overload that allows suppressing the DataChangedByProgram event
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException"><c>InvalidObjectException</c>.</exception>
            </summary>
            <param name="molFileString"></param>
            <param name="fileType"></param>
            <param name="suppressDataChangedByProgram"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.Clear(System.Boolean,System.Boolean)">
            <summary>
            allows suppressing the DataChangedByProgram and/or DataChanged events while clearing the control and chemobjects in memory.
            </summary>
            <param name="suppressDataChangedByProgram"></param>
            <param name="suppressDataChanged"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.DestroyAbbreviations(MDL.Draw.Chemistry.Molecule,System.Boolean@)">
            <summary>
            removes all information about abbreviation S-Groups from the loaded sketch;
            BUT: this does not touch any S-Groups that consist of amino acid information.
            </summary>
            <param name="pMolecule"></param>
            <param name="pContentChanged"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.CopyMoleculeToClipBoardHandler(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.OpenEditor">
            <summary>
            Programmatically opens the Editor from this DisplayControl.
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.DisplayControlException">
            Thrown when the internal Accelrys Draw renditor control cannot be initialized in due time.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.CloseEditor">
            <summary>
            Programmatically closes an editor opened from this DisplayControl.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.InternalRenditor_StructureChanged(System.Object,System.EventArgs)">
            <summary>
            This event handler transports the internal <c>Renditor's</c> StructureChanged event to the outside world.
            </summary>
            <param name="sender">the object firing this event</param>
            <param name="e">all data associated with this event (discarded by this handler)</param>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.AllowSingleMoleculeCopy">
            <summary>
            flag indicating that the context menu is extended with items allowing single molecule copy for reactions.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.ContextMenu">
            <summary>
            provides access to the underlying ContextMenu.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.ContextMenuStrip">
            <summary>
            provides access to the underlying ContextMenuStrip.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.Font">
            <summary>
            font of the control
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.ScalingMode">
            <summary>
            Returns or sets the scaling mode.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.Hydrogens">
            <summary>
            Returns or sets the hydrogen display mode
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.AtomLabelMargin">
            <summary>
            Gets or sets the margin between bond end and atom label given in points (default: 1.5)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.BondLength">
            <summary>
            Gets or sets the bond length of displayed ChemObjects in decipoints.
            </summary>
            <remarks>The readonly property <see cref="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.StandardBondLengthWithUnit"/> reflects this settings including units.</remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.DoubleBondWidth">
            <summary>
            Gets or sets the double bond width as a fraction of the bond length
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.StandardBondLengthWithUnit">
            <summary>
            Gets the bond length of displayed ChemObjects including its unit.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.ToolTipText">
            <summary>
            Returns or sets the <see cref="T:System.Windows.Forms.ToolTip"/> Text
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.SketchType">
            <summary>
            Gets or sets the type of sketch allowed for this display control at runtime
            </summary>
            <remarks>
            Sketch will allow both Structure and Reaction, whereas Structure
            and Reaction will cause the display control to accept the specified Type only.
            ReactionProducts accepts any sketch and tries to interpret it as the product side of a reaction.
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.AllowEdit">
            <summary>
            Gets or sets if the DisplayControl's contents can be edited by the user
            </summary>
            <remarks>
            Even if this is set to false, a program will still be able to change the content simply by using
            one of the DisplayControl's functions like <see cref="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.LoadChemObject(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject)"/>.
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.ColorAtomsByType">
            <summary>
            Gets or sets if the atoms should be colored by their type (using default colors per element)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.ColorStereoGroups">
            <summary>
            Get or sets the mode for coloring stereogenic centers
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.HighlightColor">
            <summary>
            Get or sets the standard color for highlighted atoms and/or bonds
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.StereoLabels">
            <summary>
            Gets or sets if the DisplayControl's mode of displaying stereochemistry
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.ExpandAbbreviationsOnEdit">
            <summary>
            Gets or sets if the incoming sketch should be stripped of abbreviations.
            </summary>
            <remarks>
            This setting does not affect any S-Groups representing amino acid related abbreviations.
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.AAMappingDisplay">
            <summary>
            Returns or sets the hydrogen display mode
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.BondMarkerDisplay">
            <summary>
            Returns or sets the display mode for bond make/break markers in reactions
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.Editing">
            <summary>
            Indicates whether the control has an editor window open. 
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.BinarySketchArray">
            <summary>
            gets or sets content of the sketch inside the Control using a byte array containing the MDL proprietary <c>skc</c> format.
            </summary>
            <remarks>
            As this is a true runtime property, it's <c>Browsable</c> attribute is set to false.
            This tells a visual editor not to display it in the properties dialog.
            </remarks>
        </member>
        <member name="E:BBS.ST.IVY.Chemistry.Display.DisplayControl.DataChanged">
            <summary>
            This event is fired each time there is a change in the data contained in the display control 
            </summary>
            <remarks>
            This event will get fired even if the "changed" data are chemically identical with the previous data!
            </remarks>
        </member>
        <member name="E:BBS.ST.IVY.Chemistry.Display.DisplayControl.ValidatingUserInput">
            <summary>
            This event is fired each time the display control is about to receive new data
            by some user interaction such as clicking a transfer button in an editor or copy-and-paste
            </summary>
            <remarks>
            When registering for this event, you get the chance of deciding what to do with the incoming change.
            </remarks>
        </member>
        <member name="E:BBS.ST.IVY.Chemistry.Display.DisplayControl.DataChangedByUser">
            <summary>
            This event is fired each time the display control has received new data
            by some user interaction such as clicking a transfer button in an editor or copy-and-paste
            </summary>
        </member>
        <member name="E:BBS.ST.IVY.Chemistry.Display.DisplayControl.DataChangedByProgram">
            <summary>
            This event is fired each time the display control has received new data
            by some program function, e.g. via <see cref="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.LoadChemObject(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject)"/> or <see cref="M:BBS.ST.IVY.Chemistry.Display.DisplayControl.Clear"/>
            </summary>
        </member>
        <member name="E:BBS.ST.IVY.Chemistry.Display.DisplayControl.ReadonlyAlert">
            <summary>
            This event is fired each time the display control has received new data
            from a structure Editor, even though <see cref="P:BBS.ST.IVY.Chemistry.Display.DisplayControl.AllowEdit"/> has been set to false in the meantime.
            </summary>
            <remarks>
            The application logic of the <see cref="T:BBS.ST.IVY.Chemistry.Display.DisplayControl"/> will always refuse an update
            Registering for this event does not change this logic,
            but it gives your program the opportunity of telling the users what happened.
            If you do not tell them, it will look like nothing happens when they press the transfer button in the editor.
            </remarks>
        </member>
        <member name="E:BBS.ST.IVY.Chemistry.Display.DisplayControl.EditingChanged">
            <summary>
            Occurs when the value of the property "Editing" changes.
            </summary>
        </member>
        <member name="E:BBS.ST.IVY.Chemistry.Display.DisplayControl.ContextMenuChanged">
            <summary>
            passes event of underlying renditor control to the outside.
            </summary>
        </member>
        <member name="E:BBS.ST.IVY.Chemistry.Display.DisplayControl.ContextMenuStripChanged">
            <summary>
            passes event of underlying renditor control to the outside.
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Display.FieldType">
            <summary>
            the valid FieldTypes understood by <c>DisplayControl</c> functions
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.FieldType.Structure">
            <summary>
            a Structure 
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.FieldType.Reaction">
            <summary>
            a Reaction
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.FieldType.Sketch">
            <summary>
            any kind of Sketch
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.FieldType.ReactionProducts">
            <summary>
            either a complete reaction or only the product side of a reaction
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Display.Resources.Captions">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.Resources.Captions.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.Resources.Captions.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.Resources.Captions.Structure">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw">
            <summary>
            Summary description for SketchControlMdlDraw.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.mySketchType">
            <summary>
            flag for the <see cref="P:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.SketchType"/>
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.myDataChangedByProgram">
            <summary>
            Flag for indicating programmatic data change
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.#ctor">
            <summary>
            default constructor
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException">
            Something is wrong with the MDL Direct installation, e.g. it is not installed at all,
            or the installed version does not meet the minimum requirements.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.DestroyAbbreviations">
            <summary>
            removes all information about abbreviation S-Groups from the loaded sketch;
            BUT: this does not touch any S-Groups that consist of amino acid information.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.MyInternalRenditor_StructureChanged(System.Object,System.EventArgs)">
            <summary>
            This event handler transports the internal <c>Renditor's</c> StructureChanged event to the outside world.
            </summary>
            <param name="sender">the object firing this event</param>
            <param name="e">all data associated with this event (discarded by this handler)</param>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.Font">
            <summary>
            font of the control
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.ScalingMode">
            <summary>
            Returns or sets the scaling mode.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.Hydrogens">
            <summary>
            Returns or sets the hydrogen display mode
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.AtomLabelMargin">
            <summary>
            Gets or sets the margin between bond end and atom label given in points (default: 1.5)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.BondLength">
            <summary>
            Gets or sets the bond length of displayed ChemObjects
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.DoubleBondWidth">
            <summary>
            Gets or sets the double bond width as a fraction of the bond length
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.ToolTipText">
            <summary>
            Returns or sets the <see cref="T:System.Windows.Forms.ToolTip"/> Text
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.SketchType">
            <summary>
            Gets or sets the type of sketch allowed for this SketchControl at runtime
            </summary>
            <remarks>
            <c>FieldType</c>.Sketch will allow both Structure and Reaction, whereas <c>FieldType</c>.Structure
            and <c>FieldType</c>.Reaction will cause the SketchControl to accept the specified Type only.
            <c>FieldType</c>.ReactionProducts accepts any sketch and tries to interpret it as the product side of a reaction.
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.AllowEdit">
            <summary>
            Gets or sets if the SketchControl's contents can be edited by the user
            </summary>
            <remarks>
            Even if this is set to false, a program will still be able to change the content simply by using
            one of the SketchControl's functions or properties.
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.StereoLabels">
            <summary>
            Gets or sets if the SketchControl's mode of displaying stereochemistry
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.SketchXML">
            <summary>
            gets or sets content of the sketch inside the Control using the MDL specific XML format
            </summary>
            <remarks>
            As this is a true runtime property, its <c>Browsable</c> attribute is set to false.
            This tells a visual editor not to display it in the properties dialog.
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.BinarySketchArray">
            <summary>
            gets or sets content of the sketch inside the Control using a byte array containing the MDL proprietary <c>skc</c> format.
            </summary>
            <remarks>
            As this is a true runtime property, it's <c>Browsable</c> attribute is set to false.
            This tells a visual editor not to display it in the properties dialog.
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.ExpandAbbreviationsOnEdit">
            <summary>
            Gets or sets if the incoming sketch should be stripped of abbreviations.
            </summary>
            <remarks>
            This setting does not affect any S-Groups representing amino acid related abbreviations.
            </remarks>
        </member>
        <member name="E:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.DataChanged">
            <summary>
            This event is fired each time there is a change in the data contained in the display control 
            </summary>
            <remarks>
            This event will get fired even if the "changed" data are chemically identical with the previous data!
            </remarks>
        </member>
        <member name="E:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.DataChangedByUser">
            <summary>
            This event is fired each time the display control has received new data
            by some user interaction such as clicking a transfer button in an editor or copy-and-paste
            </summary>
        </member>
        <member name="E:BBS.ST.IVY.Chemistry.Display.SketchControlMdlDraw.DataChangedByProgram">
            <summary>
            This event is fired each time the display control has received new data
            by some program function, e.g. via LoadChemObject() or Clear() 
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.ActionFailedException">
            <summary>
            exception thrown when an action not succeeded.
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.IVYChemistryException">
            <summary>
            abstract base class for all IVY exceptions.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.IVYChemistryException.#ctor(System.String,System.Exception)">
            <summary>
            The basic IVYChemistryException constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this IVYChemistryException</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.IVYChemistryException.#ctor(System.String)">
            <summary>
            The basic IVYChemistryException constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.ActionFailedException.#ctor(System.String)">
            <summary>
            The basic ActionFailedException constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException">
            <summary>
            IVY Chemistry Exception thrown when the initialization of the cartridge fails
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.CartridgeInitializationFailureException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.CompoundNumberOutOfRangeException">
            <summary>
            Summary description for CompoundNumberOutOfRangeException.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.CompoundNumberOutOfRangeException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.CompoundNumberOutOfRangeException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.DisplayControlException">
            <summary>
            DisplayControlException is thrown if the <c>DisplayControl</c> gets an internal error
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.DisplayControlException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.DisplayControlException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException">
            <summary>
            IVY Chemistry Exception thrown when the insert of structures fails
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.ExecutingSqlException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException">
            <summary>
            IVY Chemistry Exception thrown when a function in an external library fails
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.InitializationException">
            <summary>
            exception thrown when an internal initialization error has occured.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InitializationException.#ctor(System.String)">
            <summary>
            The basic InitializationException constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidDBConnectionTypeException">
            <summary>
            IVY Chemistry Exception thrown when the db connection is not supported
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidDBConnectionTypeException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidDBConnectionTypeException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolfileException">
            <summary>
            IVY Chemistry Exception thrown when an invalid molfile is used in operations
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolfileException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolfileException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolformulaException">
            <summary>
            To be thrown when an invalid molecular formula is encountered.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolformulaException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolformulaException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">
            <summary>
            IVY Chemistry Exception thrown when an invalid object is used in operations
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidPTableException">
            <summary>
            Summary description for InvalidPTableException.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidPTableException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidPTableException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRecordException">
            <summary>
            Summary description for InvalidRecordException.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidRecordException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidRecordException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">
            <summary>
            IVY Chemistry Exception thrown when an invalid rxnfile is used in operations
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidStructureException">
            <summary>
            The internal content of the Structure isn't valid !
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidStructureException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidStructureException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException">
            <summary>
            IVY Chemistry Exception thrown if a Structure object version doesn't fit to a Reaction version !
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.InvalidVersionException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.MissingAttributeException">
            <summary>
            IVY Chemistry Exception thrown when the attribute for the element doesn't exist
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.MissingAttributeException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.MissingAttributeException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.MolFormulaCalculatorException">
            <summary>
            IVY Chemistry Exception thrown if calculation of a structure molformula failed.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.MolFormulaCalculatorException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.MolFormulaCalculatorException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.NoCartridgeContextInstalledException">
            <summary>
            IVY Chemistry Exception thrown when there is no cartridge context available
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.NoCartridgeContextInstalledException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.NoCartridgeContextInstalledException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException">
            <summary>
            IVY Chemistry Exception thrown when there couldn't be found any ChemObjects
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.NoChemObjectFoundException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.NoMolformulaAvailableException">
            <summary>
            IVY Chemistry Exception thrown when there is no molformula from db available
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.NoMolformulaAvailableException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.NoMolformulaAvailableException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.NoMolweightAvailableException">
            <summary>
            IVY Chemistry Exception thrown when there is no molweight from db available
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.NoMolweightAvailableException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.NoMolweightAvailableException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException">
            <summary>
            IVY Chemistry Exception thrown when the ChemObject couldn't be read from the database
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.ReadingChemObjectFromDBFailureException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.SingletonException">
            <summary>
            To be thrown when someone tries to create a second instance of a singleton class.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.SingletonException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.SingletonException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.StructureNotFoundException">
            <summary>
            Summary description for StructureNotFoundException.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.StructureNotFoundException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.StructureNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.WrongConfigurationNameException">
            <summary>
            IVY Chemistry Exception thrown when the name for the document root element isn't correct
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.WrongConfigurationNameException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.WrongConfigurationNameException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Exceptions.XMLValidationException">
            <summary>
            IVY Chemistry Exception thrown when the validation of an XML document failed
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.XMLValidationException.#ctor(System.String)">
            <summary>
            The basic constructor
            </summary>
            <param name="message">message text for the exception description</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Exceptions.XMLValidationException.#ctor(System.String,System.Exception)">
            <summary>
            The basic constructor with inner exception
            </summary>
            <param name="message">message text for the exception description</param>
            <param name="exception">inner exception to be wrapped in this Exception</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.FileFormats.AtomRecord">
            <summary>
             This class represents a single atom record in a Molfile
             
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.FileFormats.AtomRecord.DefaultIsotope">
            <summary>
            this indicates that there is no isotope information other than the default
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.AtomRecord.#ctor(System.String)">
            <summary>
            Constructor that initialize the AtomRecord with value
            </summary>
            <param name="record">a single atom record in a MolFile</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRecordException">Invalid Record.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.AtomRecord.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.AtomRecord.IsValid(System.String)">
            <summary>
            This method checks if myRecordString contains any "\n" (not allowed)
            </summary>
            <param name="value">String that have to be checked</param>
            <returns>true = IsValid ; false = not IsValid </returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.AtomRecord.ToString">
            <summary>
            Returns the internal representation
            </summary>
            <returns>the internal representation</returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.AtomRecord.Value">
            <summary>
            Returns the internal representation
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.AtomRecord.Isotope">
            <summary>
            Gets/Sets the isotope information associated with this Atom 
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.AtomRecord.Symbol">
            <summary>
            Gets/Sets the atomic symbol associated with this Atom 
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.FileFormats.BondRecord">
            <summary>
            This class represents a single bond row in a molfile 
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.BondRecord.#ctor(System.String)">
            <summary>
            Constructor that needs a string that contains a bond record
            </summary>
            <param name="value">a bond record as string</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRecordException">Invalid Bond Record.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.BondRecord.Decompose">
            <summary>
            Gets the information of the bond record string 
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.BondRecord.Decompose_V2000">
            <summary>
            Decomposes a record from a V2000 Molfile
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRecordException"><c>InvalidRecordException</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.BondRecord.Decompose_V3000">
            <summary>
            Decomposes a record from a V3000 Molfile
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRecordException"><c>InvalidRecordException</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.BondRecord.ToString">
            <summary>
            Returns the <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.BondRecord"/> as String 
            </summary>
            <returns>the bond record as string</returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.BondRecord.Value">
            <summary>
            Returns the <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.BondRecord"/> as String
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.BondRecord.FirstAtom">
            <summary>
            Returns the number of the first atom
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.BondRecord.SecondAtom">
            <summary>
            Returns or sets the number of the second atom
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.BondRecord.BondType">
            <summary>
            Returns or sets the the bond type as number (see specification)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.BondRecord.BondStereo">
            <summary>
            Returns or sets the bond stereo as number (see specification)
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.BubbleInfo">
            <summary>
            The information for bubble highlighting an atom or bond when rendering a structure.
            Bubble highlighting adds colored circles behind atoms and/or colored ellipses behind bonds.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BubbleInfo.Type">
            <summary>
            The type of object to apply bubble highlighting to
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BubbleInfo.ItemNumber">
            <summary>
            the atom or bond number as specified within the mol file
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BubbleInfo.R">
            <summary>
            the red component of the highlighting color
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BubbleInfo.G">
            <summary>
            the green component of the highlighting color
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BubbleInfo.B">
            <summary>
            the blue component of the highlighting color
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BubbleInfo.Size">
            <summary>
            the sizing factor for the highlighting bubble
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.BubbleInfo.#ctor(BBS.ST.IVY.Chemistry.Util.BubbleType,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            The fully parameterized constructor for a BubblInfo.
            </summary>
            <param name="type">The type of object to apply bubble highlighting to</param>
            <param name="itemNo">the atom or bond number as specified within the mol file</param>
            <param name="red">the red component of the highlighting color</param>
            <param name="green">the green component of the highlighting color</param>
            <param name="blue">the blue component of the highlighting color</param>
            <param name="size">the sizing factor for the highlighting bubble</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.BubbleType">
            <summary>
            The valid object types for bubble highlighting
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BubbleType.Atom">
            <summary>
            Atom
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BubbleType.Bond">
            <summary>
            Bond
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter">
            <summary>
            Utility class for format Conversions.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetAsBitmap(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject)">
            <summary>
            converts an <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> to a true color bitmap with opaque white background
            </summary>
            <param name="chemObject">the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/></param>
            <returns>the true color bitmap</returns>
            <remarks>
            default values for hydrogen and stereo display modes, font, and pen width are used.
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetAsBitmap(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject,BBS.ST.IVY.Chemistry.Util.DisplayPreferences,System.Boolean)">
            <summary>
            converts a <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> to a true color bitmap with opaque white background
            </summary>
            <param name="chemObject">the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/></param>
            <param name="displayPreferences">an instance of <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/> containing all settings for rendering</param>
            <param name="useIsisImplementation"></param>
            <returns>the true color bitmap</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException"><c>InvalidObjectException</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetAsBitmapStream(System.IO.Stream,BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject)">
            <summary>
            converts a <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> to a true color bitmap with opaque white background and writes it to a Stream
            </summary>
            <param name="stream">the stream to write the Bitmap to</param>
            <param name="chemObject">the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/></param>
            <remarks>
            Note that any content in the stream will get erased before writing the <see cref="T:System.Drawing.Imaging.Metafile"/> to it!
            Default values for hydrogen and stereo display modes, font, and pen width are used.
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetAsBitmapStream(System.IO.Stream,BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject,BBS.ST.IVY.Chemistry.Util.DisplayPreferences)">
            <summary>
            converts a <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> to a true color bitmap with opaque white background and writes it to a Stream
            </summary>
            <param name="stream">the stream to write the Bitmap to</param>
            <param name="chemObject">the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/></param>
            <param name="displayPreferences">an instance of <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/> containing all settings for rendering</param>
            <remarks>Note that any content in the stream will get erased before writing the <see cref="T:System.Drawing.Imaging.Metafile"/> to it!</remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetAsMetafile(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject)">
            <summary>
            converts a <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> to an Enhanced <see cref="T:System.Drawing.Imaging.Metafile"/>
            </summary>
            <param name="chemObject">the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/></param>
            <returns>the <see cref="T:System.Drawing.Imaging.Metafile"/></returns>
            <remarks>
            default values for hydrogen and stereo display modes, font, and pen width are used.
            </remarks>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">The type of <paramref name="chemObject"/> is not supported.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetAsMetafile(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject,BBS.ST.IVY.Chemistry.Util.DisplayPreferences,System.Boolean,BBS.ST.IVY.Chemistry.Util.BubbleInfo[],BBS.ST.IVY.Chemistry.Util.HighlightInfo[])">
            <summary>
            converts a <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> to an Enhanced Metafile
            </summary>
            <param name="chemObject">the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/></param>
            <param name="displayPreferences">an instance of <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/> containing all settings for rendering</param>
            <param name="useIsisImplementation">set to true if you want to use the old MDL ISIS Object Library implementation</param>
            <param name="bubbleInfos">an array of <see cref="T:BBS.ST.IVY.Chemistry.Util.BubbleInfo"/> structs that specifies bubble highlighting</param>
            <param name="highlightInfos">an array of <see cref="T:BBS.ST.IVY.Chemistry.Util.HighlightInfo"/> structs that specifies atom and/or bond highlighting</param>
            <returns>the metafile</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">The type of <paramref name="chemObject"/> is not supported.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetAsMetafile(System.Byte[])">
            <summary>
            converts a binary sketch array to an Enhanced Metafile
            </summary>
            <param name="binarySketchArray">the byte array containing an MDL sketch file</param>
            <returns>the metafile</returns>
            <remarks>
            default values for hydrogen and stereo display modes, font, and pen width are used.
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetAsMetafile(System.Byte[],BBS.ST.IVY.Chemistry.Util.DisplayPreferences)">
            <summary>
            converts a binary sketch array to an Enhanced Metafile
            </summary>
            <param name="binarySketchArray">the byte array containing an MDL sketch file</param>
            <param name="displayPreferences">an instance of <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/> containing all settings for rendering</param>
            <returns>the metafile</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetAsMetafileStream(System.IO.Stream,BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject)">
            <summary>
            converts a <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> to an Enhanced Metafile and writes it to a Stream
            </summary>
            <param name="stream">the stream to write the Metafile to</param>
            <param name="chemObject">the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/></param>
            <remarks>
            Note that any content in the stream will get erased before writing the Metafile to it!
            Default values for hydrogen and stereo display modes, font, and pen width are used.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="stream"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="stream"/> does not support writing.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">The type of <paramref name="chemObject"/> is not supported.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetAsMetafileStream(System.IO.Stream,BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject,BBS.ST.IVY.Chemistry.Util.DisplayPreferences,System.Boolean,BBS.ST.IVY.Chemistry.Util.BubbleInfo[],BBS.ST.IVY.Chemistry.Util.HighlightInfo[])">
            <summary>
            converts a <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> to an Enhanced Metafile and writes it to a Stream
            </summary>
            <param name="stream">the stream to write the Metafile to</param>
            <param name="chemObject">the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/></param>
            <param name="displayPreferences">an instance of <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/> containing all settings for rendering</param>
            <param name="useIsisImplementation">set to true if you want to use the old MDL ISIS Object Library implementation</param>
            <param name="bubbleInfos">an array of <see cref="T:BBS.ST.IVY.Chemistry.Util.BubbleInfo"/> structs that specifies bubble highlighting</param>
            <param name="highlightInfos">an array of <see cref="T:BBS.ST.IVY.Chemistry.Util.HighlightInfo"/> structs that specifies atom and/or bond highlighting</param>
            <remarks>Note that any content in the stream will get erased before writing the Metafile to it!</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="stream"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="stream"/> does not support writing.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">The type of <paramref name="chemObject"/> is not supported.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetAsMetafileStream(System.IO.Stream,System.Byte[])">
            <summary>
            converts a binary sketch array to an Enhanced Metafile and writes it to a Stream
            </summary>
            <param name="stream">the stream to write the Metafile to</param>
            <param name="binarySketchArray">the byte array containing an MDL sketch file</param>
            <remarks>
            Note that any content in the stream will get erased before writing the Metafile to it!
            Default values for hydrogen and stereo display modes, font, and pen width are used.
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetAsMetafileStream(System.IO.Stream,System.Byte[],BBS.ST.IVY.Chemistry.Util.DisplayPreferences)">
            <summary>
            converts a binary sketch array to an Enhanced Metafile and writes it to a Stream
            </summary>
            <param name="stream">the stream to write the Metafile to</param>
            <param name="binarySketchArray">the byte array containing an MDL sketch file</param>
            <param name="displayPreferences">an instance of <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/> containing all settings for rendering</param>
            <remarks>Note that any content in the stream will get erased before writing the Metafile to it!</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="stream"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="stream"/> does not support writing.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetAsMolFile(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject)">
            <summary>
            converts a <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> to a molfile
            </summary>
            <param name="chemObject">the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/></param>
            <returns>the molfile</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException"><c>InvalidObjectException</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetAsRxnFile(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject)">
            <summary>
            converts a <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> to a rxnfile
            </summary>
            <param name="chemObject">the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/></param>
            <returns>the rxnfile</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException"><c>InvalidObjectException</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.CopyToClipboard(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject,BBS.ST.IVY.Chemistry.Util.DisplayPreferences)">
            <summary>
            Copies the given <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> to the clipboard
            </summary>
            <param name="chemObject">the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/></param>
            <param name="displayPreferences">an instance of <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/> containing all settings for rendering</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException">Copy to clipboard failed.</exception>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException"><c>InvalidObjectException</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.CopyToClipboard(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject)">
            <summary>
            Copies the given <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> to the clipboard using default <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/>
            </summary>
            <param name="chemObject">the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/></param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException">Copy to clipboard failed.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.CopyToClipboard(System.String,BBS.ST.IVY.Chemistry.Util.DisplayPreferences)">
            <summary>
            Copies the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> represented by <paramref name="mdlFileString"/> to the clipboard
            </summary>
            <param name="mdlFileString">a string containing the MDL MOL or RXN file</param>
            <param name="displayPreferences">an instance of <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/> containing all settings for rendering</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException">Copy to clipboard failed.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.CopyToClipboard(System.String)">
            <summary>
            Copies the <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> represented by <paramref name="mdlFileString"/> to the clipboard using default <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/>
            </summary>
            <param name="mdlFileString">a string containing the MDL MOL or RXN file</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException">Copy to clipboard failed.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.GetInChIKeyFromMdlfileString(System.String,System.Boolean)">
            <summary>
            calculates InChI key from passed molfile. May throw either InitializationException or ActionFailedException.
            </summary>
            <param name="mdlFileString">molfile on which the action is performed.</param>
            <param name="throwExceptions">flag indicating if any failure forces an exception, default is false</param>
            <returns>the generated InChI key on success, otherwise String.Empty.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.MolFormula(System.String)">
            <summary>
            Calculates a mol formula string from a CTFile String
            </summary>
            <param name="pMDLFileString"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.WriteMetafileToStream(System.IO.Stream,System.Drawing.Image)">
            <exception cref="T:System.ArgumentNullException"><paramref name="stream"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="stream"/> does not support writing.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.WriteBitmapToStream(System.IO.Stream,System.Drawing.Image)">
            <exception cref="T:System.ArgumentNullException"><paramref name="stream"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="stream"/> does not support writing.</exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.CustomMolweightSGroupIdentifier">
            <summary>
            gets or sets the identifier for Sgroup data containing a custom molweight for * atoms.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.DefaultFont">
            <summary>
            the default font used for visualizations
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.DefaultHydrogenDisplayMode">
            <summary>
            the default hydrogen display mode used for visualizations
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.DefaultAAMappingDisplayMode">
            <summary>
            the default atom-atom mapping display mode used for visualizations
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.DefaultBondMarkerMode">
            <summary>
            the default bond change marker display mode used for visualizations
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.DefaultStereoLabelsDisplayMode">
            <summary>
            the default stereo labels display mode used for visualizations
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.FormatConverter.DefaultPenWidth">
            <summary>
            the default pen width used for visualizations
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.FileFormats.MDLFile">
            <summary>
            Abstract class that represents a MDl-File(MolFile,RXNFile....).
            It offers all Rows in an <see cref="T:System.Collections.ArrayList"/>.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.FileFormats.MDLFile.VERSION_V2000">
            <summary>
            MDL FileVersion "V2000"
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.FileFormats.MDLFile.VERSION_V3000">
            <summary>
            MDL FileVersion "V3000"
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.FileFormats.MDLFile.myContent">
            <summary>
            the representation of this object
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.FileFormats.MDLFile.myListOfMDLFileRows">
            <summary>
            Contains all rows of the file
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLFile.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLFile.#ctor(System.String)">
            <summary>
            Constructor that expects a String
            </summary>
            <param name="fileContent">String that contains a MDL-File</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLFile.#ctor(System.IO.Stream)">
            <summary>
            Constructor that expects a Stream
            </summary>
            <code>MDLFile myMDLFile = new MDLFile(File.OpenRead(filename));</code>
            <param name="stream">Stream that contains a MDL-File</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLFile.ToString">
            <summary>
            Returns the internal implementation as String
            </summary>
            <remarks>
            The returned string contains only the platform specific newline characters.
            Additionally, it is stripped of all but one trailing empty lines in the original MDL File.
            This makes it suitable for equality comparisons.
            </remarks>
            <returns>MDL-File as String</returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLFile.Rows">
            <summary>
            Returns a <see cref="T:System.Collections.ArrayList"/> of all rows in the <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLFile"/>
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLFile.MDLFileString">
            <summary>
            The whole MDL-File as String
            </summary>
            <remarks>
            This property represents the original MDL File as String.
            For equality comparisons, better use <see cref="M:BBS.ST.IVY.Chemistry.FileFormats.MDLFile.ToString"/>().
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLFile.NewlineInUse">
            <summary>
            returns the newline character(s) used in this specific instance
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.FileFormats.MDLFileRow">
            <summary>
            This class represents a single row in an MDL file
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLFileRow.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLFileRow.#ctor(System.String)">
            <summary>
            Constructor that needs a MDLFileRow as string
            </summary>
            <param name="row">a MDLFileRow</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLFileRow.ToString">
            <summary>
            Returns the <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLFileRow"/> as string
            </summary>
            <returns></returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLFileRow.Value">
            <summary>
            Returns or sets the internal representation
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile">
            <summary>
            This class represents a Molfile (MDL)
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.NoStructureV2000">
            <summary>
            Returns a string that represents a V2000 NoStructure string
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.NoStructureV3000">
            <summary>
            Returns a string that represents a V3000 NoStructure string
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.#ctor">
            <summary>
            constructor for an empty MDLMolFile-object
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.#ctor(System.String)">
            <param name="molfileContent">a string that represents the MolFile</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolfileException">
            <paramref name="molfileContent"/> does not represent a valid Molfile
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.#ctor(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject)">
            <summary>
            Constructor to create a MDLMolFile-object from an <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/>
            </summary>
            <param name="chemObject">an <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> that represents a single Molfile</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidObjectException">
            Thrown when <paramref name="chemObject"/> does not represent a Structure
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.#ctor(System.IO.Stream)">
            <summary>Constructor that expects a Stream</summary>
            <example>To create a MDLMolFile-object:
            <code>MDLMolFile myMDLMolFile = new MDLMolFile(File.OpenRead(strFilename));</code>
            </example>
            <remarks> to read from a File use this: <code>MDLFile myMDLile = new MDLFile(File.OpenRead(strFilename));</code></remarks>
            <param name="stream">Stream that contains a MDLMol-File</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolfileException">
            Thrown when the String within <paramref name="stream"/> does not represent a valid Molfile
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.ResetCalculatedValues">
            <summary>
            this method resets all calculated values that are exposed via get properties 
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.Decompose">
            <summary>
            this methods verifies and splits an <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLFile"/> into different kinds of rows (atoms, bonds and properties)
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolfileException">An invalid mol file has been used.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.DecomposeV2000">
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRecordException">An invalid record has been encountered.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.DecomposeV3000">
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRecordException">An invalid record has been encountered.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.ProcessV2000Properties">
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRecordException">An invalid record has been encountered.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.ProcessV2000Isotopes(System.String)">
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRecordException">An invalid record has been encountered.</exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.EndTag">
            <summary>
            Returns the definition of the MDL-Molfile EndTag
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.StartTag">
            <summary>
            Returns the definition of the MDL-Molfile StartTag
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.Valid">
            <summary>
            Returns true if the <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile"/> contains a valid MDL-Mol File 
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.CountAtomRows">
            <summary>
            Returns the number of atoms in the MDL-Molfile
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.CountBondRows">
            <summary>
            Returns the number of bonds in the MDL-Molfile
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.Version">
            <summary>
            Returns the version number of the MDL-Molfile
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.Value">
            <summary>
            Returns the MDL-Molfile as String 
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidMolfileException">
            Thrown when Value is set to a string that does not represent a valid Molfile
            </exception>
            <remarks>
            Please note that Value will preserve the character(s) for newline,
            e.g. if you use "\n" when assigning Value, it will also yield a Value using "\n"
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.Bonds">
            <summary>
            Returns a container (<see cref="T:System.Collections.ArrayList"/>) with all BondRecords
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.Atoms">
            <summary>
            Returns a container (<see cref="T:System.Collections.ArrayList"/>) with all AtomRecords
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.Properties">
            <summary>
            Returns a container (<see cref="T:System.Collections.ArrayList"/>) with all PropertyRecords
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.HasIsotopes">
            <summary>
            Returns true if there are atoms with nonstandard isotope information
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.ChemicalValue">
            <summary>
            internal property returning the molfile without header and coordinates
            </summary>
            <remarks>
            Please note that ChemicalValue will always use Environment.Newline for line breaks
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.ValueWithoutHeader">
            <summary>
            internal property returning the molfile without header
            </summary>
            <remarks>
            Please note that ValueWithoutHeader will preserve the character(s) for newline,
            e.g. if you use "\n" when assigning Value, it will also yield a ValueWithoutHeader using "\n"
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.FlattenedValue">
            <summary>
            property returning the molfile with zeroed-out Z-coordinates
            </summary>
            <remarks>
            Please note that FlattenedValue will preserve the character(s) for newline,
            e.g. if you use "\n" when assigning Value, it will also yield a FlattenedValue using "\n"
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile.HasChiralFlag">
            <summary>
            property indicating whether this MOLFile has the chiral flag set
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile">
            <summary>
            This class represents a MDL rxnfile
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.#ctor(System.String)">
            <summary>
            Constructor that needs a String containing an MDLRxn file
            </summary>
            <param name="rxnFileContent">Content of the MDLRxn file</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">
            Thrown when <paramref name="rxnFileContent"/> does not represent a valid MDL RxnFile.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.#ctor(System.IO.Stream)">
            <summary>
            Constructor that needs a Stream that contains a MDLRxn file
            </summary>
            <param name="stream">Stream that contains a MDLRxn file</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.SetChiralFlag(System.Int32,System.Boolean)">
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">This RXN file has an unknown version.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.RebuildFromMolfiles">
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">This RXN file has an unknown version.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.Decompose">
            <summary>
            This method decomposes an RXN file to single Mol files and gather
            some additional information (number of reactants and products)
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">An invalid Rxn file was used to create the <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile"/> object.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.IdentifyVersion">
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">The RXN file does not start with '$RXN', or the version cannot be determined from the first line of the file.</exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.Valid">
            <summary>
            Returns true if the <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile"/> contains a valid MDL-RXN File 
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.Version">
            <summary>
            Returns the version number of the <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile"/>
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.MolFiles">
            <summary>
            Returns an Array that contains all <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile"/>s in this <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile"/>
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.ReactantMolFiles">
            <summary>
            Returns an Array that contains all Reactant <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile"/>s in this <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile"/>
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.ProductMolFiles">
            <summary>
            Returns an Array that contains all Product <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile"/>s in this <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile"/>
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.InternalMolfileCount">
            <summary>
            Returns the number of the internal <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.MDLMolFile"/>s
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.ProductCount">
            <summary>
            Returns the number of the products
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.ReactantCount">
            <summary>
            Returns the number of the reactants
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.MDLRxnFile.Value">
            <summary>
            Returns the MDLRxn file as String
            </summary>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">An invalid Rxn file was used.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.FileFormats.PropertyRecord.Decompose">
            <summary>
            Every new <see cref="T:BBS.ST.IVY.Chemistry.FileFormats.PropertyRecord"/> will be analyzed and parsed to the specialized method
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.PropertyRecord.Value">
            <summary>
            Returns the whole record
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.PropertyRecord.SGroupNumber">
            <summary>
            Returns the number of the <c>SGroup</c> (where this record belongs to)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.PropertyRecord.Identifier">
            <summary>
            The identifier of the record ("A", "V", "S", "G" or "M")
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.FileFormats.PropertyRecord.Type">
            <summary>
            The type of record ("XYZ" for an "M XYZ" entry)
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.FileFormats.SGroup">
            <summary>
            Summary description for SGroup.
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.FileFormats.SGroupPropertyRecord">
            <summary>
            This class represents a single property-record in a MDL-Molfile
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.BitmapUtil">
            <summary>
             Utility Class for special Bitmap handling
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.BitmapUtil.GetOpaqueBitmap(System.Drawing.Bitmap)">
            <summary>
            Converts a Bitmap to an opaque Bitmap with a <see cref="T:System.Drawing.Imaging.PixelFormat"/> of 8 bit per pixel indexed with a palette.
            </summary>
            <param name="bmp">The Bitmap to be converted</param>
            <returns>The opaque Bitmap ready to be saved as a GIF image</returns>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.CustomAtomColor">
            <summary>
            class to hold information for an atom symbol and its fore color used for rendering.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.CustomAtomColor.#ctor">
            <summary>
            standard ctor.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.CustomAtomColor.#ctor(System.String,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="pAtomSymbol"></param>
            <param name="pAtomColor"></param>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.CustomAtomColor.AtomColor">
            <summary>
            color to be applied to the AtomSymbol.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.CustomAtomColor.AtomSymbol">
            <summary>
            atom symbol as defined in the pTable.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.CustomAtomColor.ColorArgb">
            <summary>
            Alternative to define the AtomColor by its Argb value.
            Used for serialization purpose.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.CustomAtomColor.ColorName">
            <summary>
            Alternative to define the AtomColor by its Name value.
            Used for serialization purpose.
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences">
            <summary>
            class to hold any preferences that influence rendering
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.#ctor">
            <summary>
            The constructor is kept private to enforce initialization via static methods
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.GetSystemDefaultPreferences">
            <summary>
            Creates a new <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/> instance with system default values
            </summary>
            <returns>the newly created <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/> instance</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.GetUserDefaultPreferences">
            <summary>
            Creates a new <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/> instance with values taken from the runtime machine's user settings.
            If no user settings are present, default values are assigned.
            </summary>
            <returns>the newly created <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/> instance</returns>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.ChemLabelFont">
            <summary>
            the font used for atom labels (default: Arial, 10pt, regular)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.ColorAtomsByType">
            <summary>
            true if the atoms should be colored by it's type. (default: true)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.ColorStereoGroups">
            <summary>
            the stereo group color mode. (default: LabelsOnly)
            </summary>
            <see cref="T:BBS.ST.IVY.Chemistry.Util.StereoGroupColorMode"/>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.TextFont">
            <summary>
            the font used for text boxes (default: Times New Roman, 10pt, regular)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.HydrogenDisplayMode">
            <summary>
            the hydrogen display mode (default: None)
            </summary>
            <see cref="T:BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode"/>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.StereoLabelsDisplayMode">
            <summary>
            the stereo labels display mode (default: Enhanced)
            </summary>
            <see cref="T:BBS.ST.IVY.Chemistry.Util.StereoLabelsDisplayModeMdlDraw"/>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.AAMappingDisplayMode">
            <summary>
            the display mode for atom-atom mappings in reactions (default: Off)
            </summary>
            <see cref="T:BBS.ST.IVY.Chemistry.Util.AAMappingDisplayMode"/>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.BondMarkerMode">
            <summary>
            the display mode for bond make/break markers in reactions (default: Off)
            </summary>
            <see cref="T:BBS.ST.IVY.Chemistry.Util.BondMarkerMode"/>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.AtomLabelMargin">
            <summary>
            the margin between bond end and atom label given in points (default: 1.5)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.PenWidth">
            <summary>
            the pen width in decipoint (default: 7)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.BondLength">
            <summary>
            the standard bond length in decipoint (default: the decipoint equivalent to 0.7 cm = (0.7 / 2.54) * 720.0)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.DoubleBondWidth">
            <summary>
            the spacing between the two lines in double bonds as a fraction of the bond length (default: 0.18)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.TransparentBackground">
            <summary>
            true if a transparent background should be rendered (default: false)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.ReactionProductsAuto">
            <summary>
            true if reactions without reactants or with just a single no-structure reactant
            should be displayed as product-side only (i.e. all products separated by rxn pluses)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.DisplayCarbonLabels">
            <summary>
             true if carbon atoms should explicitly be labeled as "C" (default: false)
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.ApplyCustomAtomColors">
            <summary>
            flag indicating if CustomAtomColors should be applied to the chem object when copying to clipboard is invoked.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.CustomAtomColors">
            <summary>
            list of CustomAtomColor objects which might be applied to a chem object.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.DisplayPreferences.HighlightColor">
            <summary>
            the color used for standard atom and/or bond highlighting (e.g. the one declared inside a V3000 CTAB).
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode">
            <summary>
            the valid hydrogen display modes understood by IVY Chemistry functions
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode.None">
            <summary>
            display no hydrogens at all
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode.Hetero">
            <summary>
            display only hydrogens attached to hetero atoms
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode.Terminal">
            <summary>
            display only hydrogens attached to atoms terminating a chain
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode.All">
            <summary>
            display all hydrogens
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode.HeteroOrTerminal">
            <summary>
            display only hydrogens attached to hetero atoms or to atoms terminating a chain
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.MdlConversions">
            <summary>
            Conversion functions for MDL specific enumerations etc.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlConversions.ToHydrogenDisplayModeMdlDraw(BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode)">
            <summary>
            Translates the IVY Chemistry enumeration members for <see cref="T:BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode"/> to their counterparts in MDL Draw 
            </summary>
            <param name="hydrogenDisplayMode">the Hydrogen display Mode to translate</param>
            <returns>the MDL Draw counterpart of that mode</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlConversions.ToHydrogenDisplayModeIsis(BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode)">
            <summary>
            Translates the IVY Chemistry enumeration members for <see cref="T:BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode"/> to their counterparts in ISIS Object Library 
            </summary>
            <param name="hydrogenDisplayMode">the Hydrogen display Mode to translate</param>
            <returns>the ISIS Object Library counterpart of that mode</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlConversions.ToHydrogenDisplayMode(MDL.Draw.Renderer.Preferences.HydrogenDisplayMode)">
            <summary>
            Translates the MDL Draw enumeration members for <see cref="T:BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode"/> to their counterparts in IVY Chemistry
            </summary>
            <param name="hydrogenDisplayModeMdlDraw">the Hydrogen display Mode to translate</param>
            <returns>the IVY Chemistry counterpart of that mode</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlConversions.ToHydrogenDisplayMode(System.Int32)">
            <summary>
            Translates the ISIS Object Library enumeration members for <see cref="T:BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode"/> to their counterparts in IVY Chemistry
            </summary>
            <param name="hydrogenDisplayModeIsis">the Hydrogen display Mode to translate</param>
            <returns>the IVY Chemistry counterpart of that mode</returns>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.MdlConversions.IsisHydrogenDisplayMode">
            <summary>
            the valid hydrogen display modes understood by MDL ISIS Object Library functions
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.MdlConversions.IsisHydrogenDisplayMode.None">
            <summary>
            display no hydrogens at all
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.MdlConversions.IsisHydrogenDisplayMode.Hetero">
            <summary>
            display only hydrogens attached to hetero atoms
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.MdlConversions.IsisHydrogenDisplayMode.Terminal">
            <summary>
            display only hydrogens attached to atoms terminating a chain
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.MdlConversions.IsisHydrogenDisplayMode.All">
            <summary>
            display all hydrogens
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.HighlightInfo">
            <summary>
            The information for highlighting an atom or bond when rendering a structure
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.HighlightInfo.Type">
            <summary>
            The type of object to apply highlighting to
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.HighlightInfo.ItemNumber">
            <summary>
            the atom or bond number as specified within the mol file
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.HighlightInfo.R">
            <summary>
            the red component of the highlighting color
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.HighlightInfo.G">
            <summary>
            the green component of the highlighting color
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.HighlightInfo.B">
            <summary>
            the blue component of the highlighting color
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.HighlightInfo.#ctor(BBS.ST.IVY.Chemistry.Util.HighlightType,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            The fully parameterized constructor for a HighlightInfo.
            </summary>
            <param name="type">The type of object to apply highlighting to</param>
            <param name="itemNo">the atom or bond number as specified within the mol file</param>
            <param name="red">the red component of the highlighting color</param>
            <param name="green">the green component of the highlighting color</param>
            <param name="blue">the blue component of the highlighting color</param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.HighlightType">
            <summary>
            The valid object types for highlighting
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.HighlightType.Atom">
            <summary>
            Atom
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.HighlightType.Bond">
            <summary>
            Bond
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.IChemObjectInternals">
            <summary>
            StructureInternals
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.IChemObjectInternals.Internals">
            <summary>
            gets or sets the internal representation
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.IsisWrapper">
            <summary>
            Summary description for IsisWrapper.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.#ctor">
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException">MDL libraries seem not to be installed on this machine.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetInstance">
            <summary>
            Returns the singleton instance of <see cref="T:BBS.ST.IVY.Chemistry.Util.IsisWrapper"/>.
            </summary>
            <remarks>
            If no instance has been created yet, this method also creates it.
            </remarks>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException">
            Something is wrong with the MDL ISIS installation, e.g. it is not installed at all,
            or the installed version does not meet the minimum requirements.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.CreateBuffer(System.Int32)">
            <summary>
            
            </summary>
            <param name="bufferLength"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.OpenWriteVirtualTextFile(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="bufferID"></param>
            <param name="bufferLength"></param>
            <returns></returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException"><c>ExternalLibraryException</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.WriteStrToFile(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="fileHandle"></param>
            <param name="stringToWrite"></param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException"><c>ExternalLibraryException</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.CloseVirtualFile(System.Int32)">
            <summary>
            
            </summary>
            <param name="fileHandle"></param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException"><c>ExternalLibraryException</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.OpenReadVirtualTextFile(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="bufferID"></param>
            <param name="bufferLength"></param>
            <returns></returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException"><c>ExternalLibraryException</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.ReadRxnFile(System.Int32)">
            <summary>
            
            </summary>
            <param name="fileHandle"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.ReadMolFile(System.Int32)">
            <summary>
            
            </summary>
            <param name="fileHandle"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetTotalSkObjs(System.Int32)">
            <summary>
            
            </summary>
            <param name="sketchID"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.LayoutRxn(System.Int32,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="sketchID"></param>
            <param name="useStdBond"></param>
            <param name="stdBondLength"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.LayoutMol(System.Int32,System.Double)">
            <summary>
            
            </summary>
            <param name="sketchID"></param>
            <param name="stdBondLength"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.LayoutChiralFlag(System.Int32)">
            <summary>
            
            </summary>
            <param name="sketchID"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.DeleteBuffer(System.Int32)">
            <summary>
            
            </summary>
            <param name="bufferID"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.DeleteSketch(System.Int32)">
            <summary>
            
            </summary>
            <param name="sketchID"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.WriteMolFile(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="fileHandle"></param>
            <param name="sketchID"></param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException"><c>ExternalLibraryException</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.WriteRxnFile(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="fileHandle"></param>
            <param name="sketchID"></param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException"><c>ExternalLibraryException</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetBufferTextSize(System.Int32)">
            <summary>
            
            </summary>
            <param name="bufferID"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.ReadStrFromFile(System.Int32)">
            <summary>
            
            </summary>
            <param name="fileHandle"></param>
            <returns></returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException"><c>ExternalLibraryException</c>.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.WriteSystemMetafile(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="sketchID"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetSkObjType(System.Int32)">
            <summary>
            
            </summary>
            <param name="sketchObjectID"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.SetUnits(BBS.ST.IVY.Chemistry.Util.Unit)">
            <summary>
            sets the global Unit type for all MDL Object library scalings etc.
            </summary>
            <param name="unitType">the Type of units</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.SetSkObjTextFont(System.Int32,System.Drawing.Font)">
            <summary>
            
            </summary>
            <param name="sketchObjectID"></param>
            <param name="font"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.SetDefaultTextFont(System.Drawing.Font)">
            <summary>
            sets the default text font for this object library runtime
            </summary>
            <param name="font">the Font</param>
            <remarks>
            caution: this function sets the default font GLOBALLY
            (this instance of MDL Object Library is shared within one runtime!)
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetDefaultTextFont">
            <summary>
            gets the default text font for this object library runtime
            </summary>
            <returns>a System.Drawing.Font object</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.SetDefaultMolFont(System.Drawing.Font)">
            <summary>
            sets the default mol font for this object library runtime
            </summary>
            <param name="font">the Font</param>
            <remarks>
            caution: this function must be called before any relevant operation, such as writing a <see cref="T:System.Drawing.Imaging.Metafile"/>
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.SetSketchAtomFont(System.Int32,System.Drawing.Font)">
            <summary>
            sets the font used for atomic symbols in a sketch
            </summary>
            <param name="sketchID">the Sketch ID</param>
            <param name="font">the desired text font</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetSkObjTextFont(System.Int32)">
            <summary>
            
            </summary>
            <param name="sketchObjectID"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetSketchFonts(System.Int32)">
            <summary>
            gets the text fonts of all relevant objects in a sketch
            </summary>
            <param name="sketchID">the ID of the sketch</param>
            <returns>a pipe ("|") separated string with sketch object types and fonts</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetFirstAtomFont(System.Int32)">
            <summary>
            gets the font of the first atom object found in a sketch
            </summary>
            <param name="sketchID">the ID of the sketch</param>
            <returns>a System.Drawing.Font</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetFirstChiralFont(System.Int32)">
            <summary>
            gets the font of the first chiral flag object found in a sketch
            </summary>
            <param name="sketchID">the ID of the sketch</param>
            <returns>a System.Drawing.Font</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.SetSkObjPenWidth(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="sketchObjectID"></param>
            <param name="penWidth"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetSkObjPenWidth(System.Int32)">
            <summary>
            
            </summary>
            <param name="sketchObjectID"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.SetSketchPenWidth(System.Int32,System.Int32)">
            <summary>
            sets the pen width used to draw any lines in a sketch
            </summary>
            <param name="sketchID">the Sketch ID</param>
            <param name="penWidth">the desired pen width</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetSketchPenWidths(System.Int32)">
            <summary>
            gets the pen withs of all objects in a sketch
            </summary>
            <param name="sketchID">the ID of the sketch</param>
            <returns>a pipe ("|") separated string with sketch object types and pen widths</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.SetSketchDisplayHydrogens(System.Int32,BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode)">
            <summary>
            sets the hydrogen display mode of a sketch
            </summary>
            <param name="sketchID">the SketchID of the sketch</param>
            <param name="hydrogenDisplayMode">desired hydrogen display mode</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetIsisVersion">
            <summary>
            gets the runtime version of the ISIS installation
            </summary>
            <returns>the ISIS version as an instance of the System.Version class</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.SetSketchMode(System.Int32,BBS.ST.IVY.Chemistry.Util.SketchMode)">
            <summary>
            sets the sketch mode of a sketch
            </summary>
            <param name="sketchId">the sketch's ID</param>
            <param name="sketchMode">the desired mode</param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetSketchMode(System.Int32)">
            <summary>
            gets the sketch mode of a sketch
            </summary>
            <param name="sketchId">the sketch's ID</param>
            <returns>the mode of the sketch</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetSketchBoundingBox(System.Int32)">
            <summary>
            gets the bounding box of an MDL sketch
            </summary>
            <param name="sketchID">the SketchID of the sketch</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Util.BoundingBox"/>.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetSkObjBox(System.Int32)">
            <summary>
            gets the bounding box of an MDL sketch object
            </summary>
            <param name="skObjID">the ID of the sketch object</param>
            <returns>a <see cref="T:BBS.ST.IVY.Chemistry.Util.BoundingBox"/>.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetBondType(System.Int32)">
            <summary>
            
            </summary>
            <param name="bondID"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetSketchBondLengths(System.Int32)">
            <summary>
            gets the lengths of all bond objects in a sketch
            </summary>
            <param name="sketchID">the ID of the sketch</param>
            <returns>a pipe ("|") separated string with bond types and lengths</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetAverageBondLength(System.Int32,BBS.ST.IVY.Chemistry.Util.BondType)">
            <summary>
            gets the average length of all bond objects of the specified type in a sketch
            </summary>
            <param name="sketchID">the ID of the sketch</param>
            <param name="bondType">the type of bond to check</param>
            <returns>the average bond length; if there are no bonds of the specified type, 0 is returned.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetSkObjId(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="sketchID"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.GetAllBoundingBoxes(System.Int32)">
            <summary>
            
            </summary>
            <param name="sketchID"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.ScaleSketch(System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="sketchID"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.DoesSketchHaveSssQueryProperties(System.Int32)">
            <summary>
            
            </summary>
            <param name="sketchID"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.AreMoleculesEqual(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.ReadSketchFile(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.IsisWrapper.DeleteSkObj(System.Int32)">
            <summary>
            
            </summary>
            <param name="sketchObjId"></param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.BoundingBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BoundingBox.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BoundingBox.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BoundingBox.Right">
            <summary>
            
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BoundingBox.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.BoundingBox.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.AtomDisplayProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.AtomDisplayProperties.HydrogenDisplayMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.AtomDisplayProperties.#ctor(BBS.ST.IVY.Chemistry.Util.HydrogenDisplayMode,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="hydrogenDisplayMode"></param>
            <param name="showNumber"></param>
            <param name="showValence"></param>
            <param name="showValue"></param>
            <param name="showCarbon"></param>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.ScalingModeMdlDraw">
            <summary>
            the valid ScalingModes understood by MDL Draw library functions
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.ScalingModeMdlDraw.FitBox">
            <summary>
            scale the sketch to fill the box (enlarge as well as reduce)
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.ScalingModeMdlDraw.StdBondAbs">
            <summary>
            scale sketches using the standard bond length even if they do not fit into the box
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.ScalingModeMdlDraw.StdBond">
            <summary>
            scale sketches using the standard bond length, but scale them down if needed
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.StereoLabelsDisplayModeMdlDraw">
            <summary>
            the valid display Modes for StereoLabels understood by MDL Draw library functions
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.StereoLabelsDisplayModeMdlDraw.Classic">
            <summary>
            Displays the Chiral label on the structure with absolute stereochemistry
            according the MDL's original stereochemical representation.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.StereoLabelsDisplayModeMdlDraw.Enhanced">
            <summary>
            Displays the abs / or / and label on the stereocenter atom(s)
            according to  MDL’s Enhanced Stereochemical Representation
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.StereoLabelsDisplayModeMdlDraw.EnhancedRS">
            <summary>
            Displays the or / and label on the stereocenter atom(s)
            according to  MDL’s Enhanced Stereochemical Representation,
            using R or S instead of abs for centers with absolute sterochemistry
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.StereoLabelsDisplayModeMdlDraw.Off">
            <summary>
            Turns off all sterochemistry labels
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.AAMappingDisplayMode">
            <summary>
            the valid modes for Atom-Atom-Mapping understood by MDL Draw library functions
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.AAMappingDisplayMode.Off">
            <summary>
            Does not display Atom Atom maps
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.AAMappingDisplayMode.On">
            <summary>
            Displays all present Atom Atom maps
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.AAMappingDisplayMode.SolelyAtReactionCenter">
            <summary>
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.BondMarkerMode">
            <summary>
            the valid modes for displaying bond change markers understood by MDL Draw library functions
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BondMarkerMode.Off">
            <summary>
            Displays no bond change markers. 
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BondMarkerMode.HashMarks">
            <summary>
            Displays bond change markers solely on bonds that change in the reaction.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BondMarkerMode.Color">
            <summary>
            Displays reacting centers in Red. 
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BondMarkerMode.AllMarks">
            <summary>
            Displays bond change markers on all bonds in the reaction,
            including the dot marker (.) on bonds that undergo no change. 
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.BondMarkerMode.Thicker">
            <summary>
            Displays bond change markers as thicker bonds.
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.StereoGroupColorMode">
            <summary>
            the valid modes for coloring stereogenic centers understood by Accelrys Draw library functions
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.StereoGroupColorMode.Off">
            <summary>
            Displays no color on the labels or the bonds of stereogroups.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.StereoGroupColorMode.BondsOnly">
            <summary>
            Displays color on the bonds of stereogroups.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.StereoGroupColorMode.LabelsOnly">
            <summary>
            Displays color on the labels of stereogroups.
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.StereoGroupColorMode.LabelsAndBonds">
            <summary>
            Displays color on both the labels and the bonds of stereogroups.
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil">
            <summary>
            This class hosts some MDL Draw Library Utilities.
            </summary>
            <remarks>
            This class is intended for internal IVY Chemistry use only!
            Please use the <c>BBS.ST.IVY.Chemistry.FileFormats.FormatConverter</c> class to access its features!
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.GetInstance">
            <summary>
            Returns the singleton instance of <see cref="T:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil"/>.
            </summary>
            <remarks>
            If no instance has been created yet, this method also creates it.
            </remarks>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException">
            Something is wrong with the MDL Draw installation, e.g. it is not installed at all,
            or the installed version does not meet the minimum requirements.
            </exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.GetMetafileFromMdlfileString(System.String,BBS.ST.IVY.Chemistry.Util.DisplayPreferences,System.Boolean,BBS.ST.IVY.Chemistry.Util.BubbleInfo[],BBS.ST.IVY.Chemistry.Util.HighlightInfo[])">
            <summary>
            creates a Windows Enhanced <see cref="T:System.Drawing.Imaging.Metafile"/> from an MDL File String, such as a MOL- or RXN-File
            </summary>
            <remarks>
            This version uses the Windows <see cref="T:System.Drawing.Imaging.Metafile"/> creation mechanism in the MDL Draw Library
            </remarks>
            <param name="mdlfileString">a string containing the MDL File</param>
            <param name="displayPreferences">an instance of <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/> containing all settings for rendering</param>
            <param name="removeReactionArrow">if true, remove the reaction arrow from the sketch</param>
            <param name="bubbleInfos">an array of <see cref="T:BBS.ST.IVY.Chemistry.Util.BubbleInfo"/> structs that specifies bubble highlighting</param>
            <param name="highlightInfos">an array of <see cref="T:BBS.ST.IVY.Chemistry.Util.HighlightInfo"/> structs that specifies atom and/or bond highlighting</param>
            <returns>an EMF of the sketch behind <paramref name="mdlfileString"/></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.GetMetafileFromSketchArray(System.Byte[],BBS.ST.IVY.Chemistry.Util.DisplayPreferences)">
            <summary>
            creates a Windows Enhanced <see cref="T:System.Drawing.Imaging.Metafile"/> from a byte array containing an MDL SketchFile
            </summary>
            <remarks>
            This version uses the Windows <see cref="T:System.Drawing.Imaging.Metafile"/> creation mechanism in the MDL Draw Library
            </remarks>
            <param name="binarySketchArray">a byte array containing an MDL SketchFile</param>
            <param name="displayPreferences">an instance of <see cref="T:BBS.ST.IVY.Chemistry.Util.DisplayPreferences"/> containing all settings for rendering</param>
            <returns>an EMF of the sketch behind <paramref name="binarySketchArray"/></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.GetBitmapFromMdlFileString(System.String,BBS.ST.IVY.Chemistry.Util.DisplayPreferences,System.Boolean)">
            <summary>
            creates a Bitmap from an MDL File String, such as a MOL- or RXN-File
            </summary>
            <remarks>
            This version uses the Bitmap creation mechanism in the MDL Draw Library
            </remarks>
            <param name="mdlfileString">a string containing the MDL File</param>
            <param name="displayPreferences">an instance of <c>DisplayPreferences</c> containing all settings for rendering</param>
            <param name="removeReactionArrow">if true, remove the reaction arrow from the sketch</param>
            <returns>a Bitmap of the sketch behind <paramref name="mdlfileString"/></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.GetV3000MdlFileString(BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject)">
            <summary>
            Creates the V3000 representation of the MDL file within <paramref name="chemObject"/>
            </summary>
            <param name="chemObject">The <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/> on question.</param>
            <returns>The V3000 MDL file String or an empty String in case of a null or empty input Object.</returns>
            <remarks>
            MDL Draw 3.0 libraries will *always* put chiral flags into the newly created V3000 file.
            This method corrects that, so you will get a V3000 file with all chiral flags set like in the original <see cref="T:BBS.ST.IVY.Chemistry.Core.Chemistry.IChemObject"/>.
            </remarks>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">This RXN file has an unknown version.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.GetInChIKeyFromMdlfileString(System.String,System.Boolean)">
            <summary>
            calculates InChI key from passed molfile. May throw either InitializationException or ActionFailedException.
            </summary>
            <param name="mdlFileString">molfile on which the action is performed.</param>
            <param name="throwExceptions">flag indicating if any failure forces an exception, default is false</param>
            <returns>the generated InChI key on success, otherwise String.Empty.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.GetMolFormulaFromMdlFileString(System.String)">
            <summary>
             Calculates a mol formula string from a CTFile String
            </summary>
            <param name="mdlFileString">a MOL or RXN file string</param>
            <returns>the mol formula string</returns>
             <remarks><list type="bullet">
             <item>other than in the ISIS Object Library implementation, the returned string
             contains whitespace characters between different atom symbol parts (i.e. "C6 H6", not "C6H6")</item>
             <item>if this method fails to calculate a formula it returns an empty String.</item>
             </list></remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.GetSGroupMolweight(System.String)">
            <summary>
            calculates sgroup data molweight identified by CustomMolweightSGroupIdentifier property for * atoms
            </summary>
            <param name="pMDLFileString">the molfile string</param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.GetSGroupMolweight(MDL.Draw.Chemistry.Molecule)">
            <summary>
            calculates sgroup data molweight identified by CustomMolweightSGroupIdentifier property for * atoms
            </summary>
            <param name="pMolecule"></param>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.CopyToClipboard(System.String,BBS.ST.IVY.Chemistry.Util.DisplayPreferences)">
            <summary>
             Creates an MDL Draw style clipboard copy of the sketch behind <paramref name="mdlFileString"/>
            </summary>
            <param name="mdlFileString">a string containing the MDL File</param>
            <param name="displayPreferences">an instance of <c>DisplayPreferences</c> containing all settings for rendering</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.ExternalLibraryException">Copy to clipboard failed.</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.GetMdlDrawVersion">
            <summary>
             This Method retrieves the <see cref="T:System.Version"/> of the currently referenced MDL Draw library
            </summary>
            <returns>A valid <see cref="T:System.Version"/> object if MDL Draw is found, null otherwise.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.GetNormalizedCtFileString(System.String,BBS.ST.IVY.Chemistry.Util.DisplayPreferences)">
            <summary>
            Calculates a normalized CT File String based on the input and the given DisplayPreferences.
            For now this simply means scaling the coordinates to the standard bondlength given within displayPreferences
            </summary>
            <param name="ctFileString">the ct file string to be normalized</param>
            <param name="displayPreferences">the desired DisplayPreferences</param>
            <returns>a normalized CT File string.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.InitializeMDLWeights">
            <summary>
             required for chesire scripts concerning calculating molformula and molweights.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.GetRawV3000MdlFileString(System.String)">
            <summary>
            converts a V2000 MDL file (MOL or RXN file) String into a V3000 MDL file String,
            even if the V3000 Format is not necessary to host the information within the molecule or reaction
            </summary>
            <param name="v2000MdlfileString">the V2000 MDL file String</param>
            <returns>The V3000 MDL file String or an empty String in case of a null or empty input String.</returns>
            <remarks>
            Be aware that MDL Draw 3.0 libraries will *always* put chiral flags into the newly created V3000 file....
            So you will have to check if there was any chiral flag(s) and remove it (or them) if not.
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.CorrectChiralFlagsInRxn(System.String,System.Boolean[])">
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.InvalidRXNFileException">This RXN file has an unknown version.</exception>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.CustomMolweightSGroupIdentifier">
            <summary>
            gets or sets the identifier for Sgroup data containing a custom molweight for * atoms.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.DefaultFont">
            <summary>
            the default font used for visualizations
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.DefaultChemLabelFont">
            <summary>
            the default font used for visualizations
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.DefaultTextFont">
            <summary>
            the default font used for visualizations
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.DefaultHydrogenDisplayMode">
            <summary>
            the default hydrogen display mode used for visualizations
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.DefaultPenWidth">
            <summary>
            the default pen width used for visualizations
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.DefaultBondLength">
            <summary>
            the bond length used for visualizations
            </summary>
            <remarks>
            This value is given in decipoint (there are 720 decipoint in one Inch).
            </remarks>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.DefaultStereoLabelsDisplayMode">
            <summary>
            the default stereo labels display mode used for visualizations
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.DefaultAAMappingDisplayMode">
            <summary>
            the default atom-atom mapping display mode used for visualizations
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.MdlDrawUtil.DefaultBondMarkerMode">
            <summary>
            the default bond change marker display mode used for visualizations
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.SGroupType">
            <summary>
            constants for Sgroup types in MDL Object Library
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.IOResult">
            <summary>
            results of IO operations in MDL Object Library
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.SketchMode">
            <summary>
            the different sketch modes understood by MDL Object Library functions
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.FileType">
            <summary>
            the valid file types understood by MDL Object Library functions
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.FileType.MolFile">
            <summary>
            MDL Molfile
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.FileType.RxnFile">
            <summary>
            MDL Rxnfile
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.FileType.SkcFile">
            <summary>
            Sketchfile
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.AtomNumberDisplay">
            <summary>
            the valid atom number display modes understood by MDL Object Library functions
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.AtomNumberDisplay.None">
            <summary>
            do not display any atom numbers
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.AtomNumberDisplay.All">
            <summary>
            display all atom numbers
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.AtomNumberDisplay.AAMapped">
            <summary>
            display only those atom numbers involved in Atom-Atom-Mappings of a reaction
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.RxnCenterDisplay">
            <summary>
            the valid reaction center display modes understood by MDL Object Library functions
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.RxnCenterDisplay.Off">
            <summary>
            do not highlight reacting centers
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.RxnCenterDisplay.Color">
            <summary>
            highlight reacting centers using coloration
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.RxnCenterDisplay.Thickened">
            <summary>
            highlight reacting centers using thickening of bonds and atomic symbols
            </summary>
        </member>
        <member name="F:BBS.ST.IVY.Chemistry.Util.RxnCenterDisplay.Hash">
            <summary>
            highlight reacting centers using hashes on bonds
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.FontEmphasis">
            <summary>
            the valid font emphasis  modes understood by MDL Object Library functions
            </summary>
            <remarks>
            to switch on several of these modes, just add their values
            </remarks>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.SketchObjectType">
            <summary>
            the valid types of sketch objects understood by MDL Object Library functions
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.Unit">
            <summary>
            the valid Unit types understood by MDL Object Library functions
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.BondType">
            <summary>
            the valid bond types understood by MDL Object Library functions
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.Renderer">
            <summary>
              The Renderer class wraps the MDL.Draw.Renderer.Renderer
              to keep IVY.WPF free of MDL references.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.Renderer.#ctor">
            <summary>
              Crates a new instance of this class.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.Renderer.Finalize">
            <summary>
              The Finalizer of the control ensures proper disposing.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.Renderer.Dispose(System.Boolean)">
            <summary>
              Releases all managed (optional) and unmanaged resources used by this instance.
            </summary>
            <param name="disposing">
              True to release all managed and unmanaged resouces, false to release unmanaged resources only.
            </param>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.Renderer.Dispose">
            <summary>
              Releases all managed and unmanaged ressources used by this instance.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.Renderer.PasteFromClipboard">
            <summary>
              Pastes the clipboard contents into this Renderer instance.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.Renderer.CanPaste">
            <summary>
              Determines whether the clipboard contains pasteable content.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.Renderer.HasValue">
            <summary>
             Specifies whether the Renderer contains a molecule (true) or not (false).
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.Renderer.IsStructure">
            <summary>
              Gets a Boolean value indicating whether current contents represent a structure (true) or not (false).
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.Renderer.IsReaction">
            <summary>
              Return true, when the current content represents a reaction; otherwise false.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.Renderer.MolfileString">
            <summary>
              Returns the Molefile-String representation of the current content.
            </summary>
        </member>
        <member name="P:BBS.ST.IVY.Chemistry.Util.Renderer.StructureMolfileString">
            <summary>
              Returns the Molefile-String representation of the current molecule content.
            </summary>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.VersionUtil">
            <summary>
             Utility class to retrieve various version information.
            </summary>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.VersionUtil.GetISISDrawVersion">
            <summary>
             Retrieves the version of the local ISIS Draw installation.
            </summary>
            <returns>A <see cref="T:System.Version"/> object containing the MDL Draw version, or
            null if ISIS Draw is not installed on the local machine.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.VersionUtil.GetMdlDrawVersion">
            <summary>
             Retrieves the version of the local MDL Draw installation.
            </summary>
            <returns>A <see cref="T:System.Version"/> object containing the MDL Draw version, or
            null if MDL Draw is not installed on the local machine.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.VersionUtil.GetSymyxDrawVersion">
            <summary>
             Retrieves the version of the local Symyx Draw installation.
            </summary>
            <returns>A <see cref="T:System.Version"/> object containing the Symyx Draw version, or
            null if Symyx Draw is not installed on the local machine.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.VersionUtil.GetAccelrysDrawVersion">
            <summary>
             Retrieves the version of the local Accelrys Draw installation.
            </summary>
            <returns>A <see cref="T:System.Version"/> object containing the Accelrys Draw version, or
            null if Accelrys Draw is not installed on the local machine.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.VersionUtil.GetBIOVIADrawVersion">
            <summary>
             Retrieves the version of the local BIOVIA Draw installation.
            </summary>
            <returns>A <see cref="T:System.Version"/> object containing the BIOVIA Draw version, or
            null if BIOVIA Draw is not installed on the local machine.</returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.VersionUtil.IsRequiredDrawVersionInstalled">
            <summary>
             Indicates a local Accelrys or BIOVIA Draw installation is present and has the required minimum version.
            </summary>
            <returns>true if an adequate version is installed.</returns>
        </member>
        <member name="T:BBS.ST.IVY.Chemistry.Util.XMLValidator">
            <summary>
            utility class for validating XML documents
            </summary>
            <remarks>
            This class is implemented as a singleton.
            </remarks>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.XMLValidator.GetInstance">
            <summary>
            Singleton method to access the one and only runtime instance of this class
            </summary>
            <returns></returns>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.XMLValidator.ValidateXML(System.IO.Stream,System.IO.Stream)">
            <summary>
            Function to validate an XML file against an XSD schema
            </summary>
            <param name="xmlStream">a stream containing the XML file to be validated</param>
            <param name="xsdStream">a stream containing the XSD to be used for validation</param>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.XMLValidationException">thrown when the validation failed</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.XMLValidator.GetXmlSchemaFromStream(System.IO.Stream)">
            <summary>
            Function to turn a Stream into an Xml Schema
            </summary>
            <param name="xsdStream">a Stream containing an Xml Schema</param>
            <returns>a validated Xml Schema</returns>
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.XMLValidationException">thrown when the stream does not contain a valid xsd</exception>
        </member>
        <member name="M:BBS.ST.IVY.Chemistry.Util.XMLValidator.ValidationSink(System.Object,System.Xml.Schema.ValidationEventArgs)">
            <exception cref="T:BBS.ST.IVY.Chemistry.Exceptions.XMLValidationException">Validation of the given XML document failed.</exception>
        </member>
    </members>
</doc>
